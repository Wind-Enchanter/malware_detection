import csv
import hashlib
import json
import sys
import os
import random


class LinerMap(object):

    def __init__(self):
        self.items = []

    # 往表中添加元素
    def add(self, k, v):
        self.items.append((k, v))

    # 线性方式查找元素
    def get(self, k):
        for key, value in self.items:
            if key == k:  # 键存在，返回值
                return value
        return random.randint(1, 307)  # 暂时返回随机值，API函数完整后就不会有键不存在的情况


def get_apis(json_path: str) -> list:
    with open(json_path, 'rb') as f_ojb:
        json_file = json.load(f_ojb, )

    apis = []
    json_calls_list = json_file['calls']
    for json_calls_data in json_calls_list:
        json_api = json_calls_data['api']
        apis.append(json_api)

    f_ojb.close()
    return apis


def get_apis_int(json_path: str, mp: LinerMap) -> list:
    with open(json_path, 'rb') as f_ojb:
        json_file = json.load(f_ojb, )

    apis_int = []
    json_calls_list = json_file['calls']
    for json_calls_data in json_calls_list:
        json_api = json_calls_data['api']
        apis_int.append(str(mp.get(str(json_api).lower)))

    f_ojb.close()
    return apis_int


def file_hash(file_path: str, hash_method) -> str:
    if not os.path.isfile(file_path):
        print('文件不存在')
        return ''
    h = hash_method()
    with open(file_path, 'rb') as f:
        while True:
            b = f.read(8192)
            if not b:
                break
            h.update(b)
    return h.hexdigest()


def get_hash(json_path: str) -> str:
    return file_hash(json_path, hashlib.sha256)


def write_csv(f_hash, apis, csv_path):
    csv_file = open(csv_path, 'a')
    csv_file.write(f_hash + ',')
    csv_file.write(','.join(apis) + "\n")
    csv_file.close()


def trans(json_path, csv_path, mp):
    write_csv(get_hash(json_path), get_apis_int(json_path, mp)[:100], csv_path)


if __name__ == "__main__":
    # 存放API函数，以便后续索引
    m = LinerMap()
    csv_reader = csv.reader(open("./api.csv"))
    for line in csv_reader:
        m.add(str(line[0]).lower(), line[1])

    sample_name = sys.argv[1]
#    filename = '/mnt/hgfs/Ubuntu-file/cuckoo_report_analyzer-master/storage/' + sample_name + '/processes.json'
    filename = 'D:/VMShare/cuckoo_report_analyzer-master/storage/' + sample_name + '/processes.json'
    trans(filename, './test.csv', m)

    apis = get_apis_int(filename, m)
#    print(apis)
