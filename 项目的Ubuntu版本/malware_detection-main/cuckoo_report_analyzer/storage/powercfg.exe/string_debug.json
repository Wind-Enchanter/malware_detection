["!This program cannot be run in DOS mode.", "|Richn", "`.data", "USER32.dll", "ole32.dll", "SHLWAPI.dll", "msvcrt.dll", "ADVAPI32.dll", "KERNEL32.dll", "NTDLL.DLL", "OwS*PwD", "*      Manufacturer: Unavailable", "      Manufacturer: %S", "      Physical Device Object name: Unavailable", "      Physical Device Object name: %S", "      Override Removal Policy: Unavailable", "      Override Removal Policy: ", "      Hardware Removal Policy: Unavailable", "      Hardware Removal Policy: ", "      SPDRP_REMOVAL_POLICY: Unavailable", "CM_REMOVAL_POLICY_EXPECT_NO_REMOVAL", "CM_REMOVAL_POLICY_EXPECT_ORDERLY_REMOVAL", "CM_REMOVAL_POLICY_EXPECT_SURPRISE_REMOVAL", "UNKNOWN (%d)", "      SPDRP_REMOVAL_POLICY: ", "      Security Description: Unavailable", "      Security Description: %S", "      Service Name: Unavailable", "      Service Name: %S", "      Upper Filter(s): Unavailable", "      Upper Filter(s):", "      Lower Filter(s): Unavailable", "      Lower Filter(s):", "      Device Location: Unavailable", "      Device Location: %S", "      Can user obtain exclusive use?: %s", "      Device Enumerator: Unavailable", "      Device Enumerator: %S", "      Driver Name: Unavailable", "      Driver Name: %S", "      Device Description: Unavailable", "      Device Description: %S", "      Compatible device ID(s): Unavailable", "      Compatible device ID(s):", "      Class GUID: Unavailable", "      Class GUID: %S", "      Bus Number: Unavailable", "      Bus Number: %d", " (returned error code (%d))", "      Address: Unavailable", "      Address: 0x%08lx", "                     Wake from S3 supported", "                     Wake from S2 supported", "                     Wake from S1 supported", "                     Wake from S0 supported", "                     S5 supported", "                     S4 supported", "                     S3 supported", "                     S2 supported", "                     S1 supported", "                     S0 supported", "      Derived System State Mappings:", "                     %S -> %S (PowerStateMapping 0x%x)", "                     %S -> %S", "      Device State Mappings:", "                     Warm Eject supported", "                     Wake from D3 supported", "                     Wake from D2 supported", "                     Wake from D1 supported", "                     Wake from D0 supported", "                     D3 supported", "                     D2 supported", "                     D1 supported", "                     D0 supported", "      Device Power Capabilities:", "      Device is not capable of waking the system.", "      Device is not currently armed to wake the system.", "      Device is currently armed to wake the system.", "      Device is capable of bring programmed to wake the system.", "      Device is not Present.", "      Device Present.", "                     %S", "      HardwareID(s):", "      DeviceName: %S", "    Device Information:", "ERROR: OpenWmiAndQuery failed to allocate memory!  Exiting early.", "ERROR: WmiQuerySingleInstance failed (0x%08lx).", "ERROR: OpenWmiAndQuery failed to open WMI block!  Exiting early.", "  Enumerating Device: %03d", "  ===================", "InitializeDeviceList: SetupDiGetClassDevs failed! (0x%x)", "InitializeDeviceList: RootNode hasn't been initialized!", "InitializeDeviceList: Enter", "DevicePowerOpen: Initialization failure.", "DevicePowerOpen: allocation failure.", "DevicePowerOpen: gRootDeviceList is already set.", "WmiDevInstToInstanceNameW", "WmiSetSingleInstanceW", "WmiQuerySingleInstanceW", "WmiOpenBlock", "WmiCloseBlock", "CloseDevicePowerCapabilitiesDatabase: Exit (%s)", "CloseDevicePowerCapabilitiesDatabase: Cleaning up gRootDeviceList.", "CloseDevicePowerCapabilitiesDatabase: Enter.", "SetClearWakeEnable: Failed to Set WMI value (0x%08lx)", "SetClearWakeEnable: Successfully set WMI value", "DevicePowerSetDeviceState: Device Not found.", "DevicePowerEnumDevices: Caller sent me an output buffer that's too small (%d bytes).  Returning size %d", "DevicePowerEnumDevices: Caller sent me a NULL output buffer.  Returning size %d", "DevicePowerEnumDevices: I'm successfully return the friendly device name.", "DevicePowerEnumDevices: I'm successfully return the hardware ID.", "        Device doesn't match any the power capabilities requested.", "DevicePowerEnumDevices: Exit (failed to match the query)", "                        Search criteria matched, but it's the incorrect index (%d)", "        I'm turning off this device's match because it's not a real piece of hardware and the user sent in a DEVICEPOWER_FILTER_HARDWARE flag.", "        I'm turning off this device's match because it's not capable of waking the system and the user sent in a DEVICE_WAKE_PROGRAMABLE flag.", "        I'm turning off this device's match because it's not armed for wake and the user sent in a DEVICEPOWER_FILTER_WAKEENABLED flag.", "        I'm turning off this device's match because it's not present and the user sent in a DEVICEPOWER_FILTER_DEVICES_PRESENT flag.", "        Device Capabilities: 0x%x", "        Device matches some or all the power capabilities requested.", "    Checking Device: %S (%S).", "                        I'm jumping over %d previously matched nodes", "DevicePowerEnumDevices: Search criteria matches most recently used search criteria.", "                        pBufferSize: 0x%08lx", "                        QueryFlags: 0x%x", "                        QueryInterpretationFlags: 0x%x", "                        QueryIndex: %d", "DevicePowerEnumDevices: Enter", "DevicePowerEnumDevices: Bad input BufferSize.", "xpsp2res.dll", "DevicePowerSetDeviceState", "DevicePowerEnumDevices", "DevicePowerClose", "DevicePowerOpen", "GetCurrentPowerPolicies", "CallNtPowerInformation", "WriteGlobalPwrPolicy", "ReadGlobalPwrPolicy", "GetPwrCapabilities", "SetActivePwrScheme", "GetActivePwrScheme", "DeletePwrScheme", "EnumPwrSchemes", "ReadProcessorPwrScheme", "WriteProcessorPwrScheme", "ReadPwrScheme", "WritePwrScheme", "Failed to update ForcedThrottle values in powerscheme: %02d (Error %d)", "Successfully updated ForcedThrottle values in powerscheme: %02d", "SetThreadUILanguage", "SETUPAPI.dll", "PowerCfg.pdb", "VWj:Y3", "0Sj<_3", "A j<Y3", "t9Ht/Ht%Ht", "QQSVW3", "9~(t!9=$", "9~8t)9=$", "AD9~ t!", "PSSSSSSSV", "SetupDiGetDeviceRegistryPropertyW", "CM_Get_Device_IDW", "SetupDiDestroyDeviceInfoList", "SetupDiEnumDeviceInfo", "CM_Get_DevNode_Status", "SetupDiGetClassDevsW", "LoadStringW", "wsprintfW", "SystemParametersInfoW", "CharUpperW", "USER32.dll", "MPR.dll", "CoTaskMemFree", "CoUninitialize", "CoCreateInstance", "CoInitialize", "ole32.dll", "WS2_32.dll", "SHCopyKeyW", "SHDeleteKeyW", "SHLWAPI.dll", "wcslen", "printf", "_wcsicmp", "swprintf", "wcscpy", "calloc", "wcsncat", "wcsrchr", "wcstod", "wcstol", "wcsstr", "wcsncmp", "_wcsnicmp", "realloc", "fflush", "fprintf", "wcschr", "_c_exit", "_XcptFilter", "_cexit", "__winitenv", "__wgetmainargs", "_initterm", "__setusermatherr", "_adjust_fdiv", "__p__commode", "__p__fmode", "__set_app_type", "_except_handler3", "msvcrt.dll", "_controlfp", "RegCloseKey", "RegCreateKeyW", "AdjustTokenPrivileges", "LookupPrivilegeValueW", "OpenProcessToken", "ADVAPI32.dll", "LocalAlloc", "LocalFree", "lstrcmpiW", "GetLastError", "GetProcAddress", "LoadLibraryW", "FreeLibrary", "GetVersionExW", "SetLastError", "LoadLibraryExA", "GetModuleHandleW", "lstrcpyW", "lstrlenW", "CloseHandle", "WriteFile", "FormatMessageW", "CreateFileW", "ReadFile", "GetCurrentProcess", "WaitForSingleObject", "CreateProcessW", "GetSystemDirectoryW", "QueryPerformanceCounter", "GetTickCount", "GetCurrentThreadId", "GetCurrentProcessId", "GetSystemTimeAsFileTime", "TerminateProcess", "UnhandledExceptionFilter", "SetUnhandledExceptionFilter", "VerifyVersionInfoW", "VerSetConditionMask", "WideCharToMultiByte", "lstrcatW", "lstrcpynW", "WriteConsoleW", "GetStdHandle", "lstrcmpW", "GetModuleHandleA", "KERNEL32.dll", "RtlNtStatusToDosError", "NtPowerInformation", "ntdll.dll", "InterlockedExchange", "LoadLibraryA", "RaiseException", "Maximum", "Unspecified", "UNSPECIFIED", "%s (%03d)", " (000)", "UNKNOWN", "wmi.dll", "Low Battery Alarm Program", "Critical Battery Alarm Program", "POWRPROF.DLL", "Control Panel\\PowerCfg", ".Default\\Control Panel\\PowerCfg", ".DEFAULT\\Control Panel\\PowerCfg", ".Default\\Control Panel\\PowerCfgBackup", ".DEFAULT\\Control Panel\\PowerCfgBackup", "ADAPTIVE", "DEGRADE", "CONSTANT", "SeCreatePagefilePrivilege", "\\systray.exe", "videodim", "wakeonring", "resumepassword", "multibattery", "batteryicon", "all_devices", "wake_armed", "wake_programmable", "S4_supported", "S3_supported", "S2_supported", "S1_supported", "wake_from_any", "wake_from_S3_supported", "wake_from_S2_supported", "wake_from_S1_supported", "all_devices_verbose", "RestoreThrottles", "RestoreDefaultPolicies", "SavePoliciesToDefaultUser", "devicedisablewake", "deviceenablewake", "devicequery", "program", "forceaction", "action", "activate", "b|batteryalarm", "option", "g|globalpowerflag", "f|file", "processor-throttle-dc", "processor-throttle-ac", "hibernate-timeout-dc", "hibernate-timeout-ac", "standby-timeout-dc", "standby-timeout-ac", "disk-timeout-dc", "disk-timeout-ac", "monitor-timeout-dc", "monitor-timeout-ac", "n|numerical", "?|help", "i|import", "e|export", "a|availablesleepstates", "h|hibernate", "x|change", "s|setactive", "d|delete", "c|create", "q|query", "l|list", "kernel32.dll", "VS_VERSION_INFO", "StringFileInfo", "040904B0", "CompanyName", "Microsoft Corporation", "FileDescription", "Power Settings Command-Line Tool", "FileVersion", "5.1.2600.5512 (xpsp.080413-2108)", "InternalName", "PowerCfg.exe", "LegalCopyright", " Microsoft Corporation. All rights reserved.", "OriginalFilename", "PowerCfg.exe", "ProductName", "Microsoft", " Windows", " Operating System", "ProductVersion", "5.1.2600.5512", "VarFileInfo", "Translation", "Type the password for %s:1Passing the user credential on local connection.", "7The Target system must be running Windows XP or above.", "PInvalid Syntax. '%s' value is not allowed for '%s' option.", "Type \"%s\" for usage.", "KInvalid Syntax. Specify valid numeric value for '%s'.", "Type \"%s\" for usage.", "SInvalid Syntax. Specifiy valid floating point value for '%s'.", "Type \"%s\" for usage.", "HInvalid Syntax. Mandatory option '/%s' is missing.", "Type \"%s\" for usage.", "XInvalid Syntax. '%s' option is not allowed more than '%d' time(s).", "Type \"%s\" for usage.", "5Invalid Argument/Option - '%s'.", "Type \"%s\" for usage.", "BInvalid Syntax. Default argument is missing.", "Type \"%s\" for usage.", "FLength of the command line argument should not exceed 255 characters.", "[Invalid Syntax. Default option is not allowed more than '%d' time(s).", "Type \"%s\" for usage.", ">Invalid Syntax. Value expected for '%s'.", "Type \"%s\" for usage.", "TInvalid Syntax. '%s' value is not allowed as default argument.", "Type \"%s\" for usage.", "ERROR:", "WARNING:", "SUCCESS:"]