["!This program cannot be run in DOS mode.", "Y~Rich8", "`.data", "msvcrt.dll", "ADVAPI32.dll", "KERNEL32.dll", "NTDLL.DLL", "RUNS_IN_SYSTEM_PROCESS", "        FLAGS              : ", "        PID                : %d", "        WAIT_HINT          : 0x%lx", "        CHECKPOINT         : 0x%lx", "        SERVICE_EXIT_CODE  : %d", "(0x%lx)", "        WIN32_EXIT_CODE    : %d", "(0x%lx)", "IGNORES_SHUTDOWN)", "ACCEPTS_SHUTDOWN)", "NOT_PAUSABLE,", "PAUSABLE,", "                                (NOT_STOPPABLE,", "                                (STOPPABLE,", "STOPPED ", "START_PENDING ", "STOP_PENDING ", "RUNNING ", "CONTINUE_PENDING ", "PAUSE_PENDING ", "PAUSED ", "        STATE              : %lx  ", "(interactive)", "KERNEL_DRIVER ", "FILE_SYSTEM_DRIVER ", "ADAPTER ", "DRIVER ", "WIN32_OWN_PROCESS ", "WIN32_SHARE_PROCESS ", "WIN32 ", " ERROR ", "        TYPE               : %lx  ", "DISPLAY_NAME: %ws", "SERVICE_NAME: %ws", "[SC] GetServiceConfig needs %d bytes", "[SC] GetServiceConfig FAILED %d:", "        SERVICE_START_NAME : %ws  ", "                           : %ws  ", "        DEPENDENCIES       : %ws  ", "        DISPLAY_NAME       : %ws  ", "        TAG                : %lu  ", "        LOAD_ORDER_GROUP   : %ws  ", "        BINARY_PATH_NAME   : %ws  ", "IGNORE", "NORMAL", "SEVERE", "CRITICAL", "        ERROR_CONTROL      : %lx   ", "BOOT_START", "SYSTEM_START", "AUTO_START", "DEMAND_START", "DISABLED", " ERROR", "        START_TYPE         : %lx   ", " KERNEL_DRIVER ", " FILE_SYSTEM_DRIVER ", " ADAPTER ", "[SC] GetServiceConfig SUCCESS", "[SC] OpenService FAILED %d:", "[SC] GetServiceConfig: LocalAlloc FAILED %d:", "[SC] GetConfigInfo needs %d bytes", "[SC] GetConfigInfo FAILED %d:", "RESTART -- Delay = %u milliseconds.", "REBOOT -- Delay = %u milliseconds", "RUN PROCESS -- Delay = %u milliseconds", "ERROR:  Invalid action: %#x", "                                   ", "        FAILURE_ACTIONS          : ", "        COMMAND_LINE             : %ws", "        REBOOT_MESSAGE           : %ws", "%u seconds", "INFINITE ", "        RESET_PERIOD             : ", "        DESCRIPTION              : %ws", "[SC] GetConfigInfo: LocalAlloc FAILED %d:", "sc query type= driver group= NDIS     - Enumerates all NDIS drivers", "sc query type= service type= interact - Enumerates all interactive services", "sc queryex group= \"\"    - Enumerates active services not in a group", "sc query ri= 14         - Enumerates with resume index = 14", "sc query bufsize= 50    - Enumerates with a 50 byte buffer.", "sc query state= all     - Enumerates all services & drivers", "sc query type= service  - Enumerates only Win32 services", "sc query type= driver   - Enumerates only active drivers", "sc queryex messenger    - Displays extended status for the messenger service", "sc query messenger      - Displays status for the messenger service", "sc query                - Enumerates status for active services & drivers", "SYNTAX EXAMPLES", "    type=    Type of services to enumerate (driver, service, all)", "             (default = service)", "    state=   State of services to enumerate (inactive, all)", "             (default = active)", "    bufsize= The size (in bytes) of the enumeration buffer", "             (default = %d)", "    ri=      The resume index number at which to begin the enumeration", "             (default = 0)", "    group=   Service group to enumerate", "             (default = all groups)", "QUERY and QUERYEX OPTIONS : ", "If the query command is followed by a service name, the status", "for that service is returned.  Further options do not apply in", "this case.  If the query command is followed by nothing or one of", "the options listed below, the services are enumerated.", "NOTE: The option name includes the equal sign.", " type= <own|share|interact|kernel|filesys|rec|adapt>", " start= <boot|system|auto|demand|disabled>", " error= <normal|severe|critical|ignore>", " binPath= <BinaryPathName>", " group= <LoadOrderGroup>", " tag= <yes|no>", " depend= <Dependencies(separated by / (forward slash))>", " obj= <AccountName|ObjectName>", " DisplayName= <display name>", " password= <password> ", "CONFIG OPTIONS:", "SYNTAX: ", "sc <server> config [service name] <option1> <option2>...", "Modifies a service entry in the registry and Service Database.", "NOTE: The option name includes the equal sign.", " type= <own|share|interact|kernel|filesys|rec>", "       (default = own)", " start= <boot|system|auto|demand|disabled>", "       (default = demand)", " error= <normal|severe|critical|ignore>", "       (default = normal)", " binPath= <BinaryPathName>", " group= <LoadOrderGroup>", " tag= <yes|no>", " depend= <Dependencies(separated by / (forward slash))>", " obj= <AccountName|ObjectName>", "       (default = LocalSystem)", " DisplayName= <display name>", " password= <password> ", "CREATE OPTIONS:", "SYNTAX: ", "sc create [service name] [binPath= ] <option1> <option2>...", "Creates a service entry in the registry and Service Database.", "actions= <Failure actions and their delay time (in milliseconds),", "          separated by / (forward slash) -- e.g., run/5000/reboot/800", "          Valid actions are <run|restart|reboot>  >", "          (Must be used in conjunction with the reset= option)", "command= <Command line to be run on failure>", "reboot= <Message broadcast before rebooting on failure>", "reset= <Length of period of no failures (in seconds) ", "        after which to reset the failure count to 0 (may be INFINITE)>", "        (Must be used in conjunction with actions= )", "OPTIONS:", "sc <server> failure [service name] <option1> <option2>...", "USAGE:", "Changes the actions upon failure", "DESCRIPTION:", "[SC] ControlService FAILED %d:", "[SC] ChangeServiceConfig FAILED %d:", "[SC] Tag = %d", "[SC] ChangeServiceConfig SUCCESS", "[SC] SendConfigToService: LocalAlloc FAILED %d:", "invalid error= field", "invalid start= field", "invalid type= field", "[SC] ChangeServiceConfig2 FAILED %d:", "[SC] ChangeServiceConfig2 SUCCESS", "[SC] ChangeServiceFailure: RtlAdjustPrivilege FAILED %#x", "ERROR:  Invalid option  ", "[SC] ChangeServiceFailure: LocalAlloc FAILED %d:", "ERROR:  The reset and actions options must be set simultaneously. ", "[SC] CreateService SUCCESS", "[SC] CreateService FAILED %d:", "Enum: more data, need %d bytes", "Enum: entriesRead  = %d", "[SC] EnumDependentServices FAILED %d:", "[SC] EnumDepend: LocalAlloc FAILED %d:", "[SC] ConvertSecurityDescriptorToStringSecurityDescriptor FAILED %d:", "[SC] QueryServiceObjectSecurity FAILED %d:", "[SC] SetServiceObjectSecurity SUCCESS", "[SC] SetServiceObjectSecurity FAILED %d:", "[SC] ConvertStringSecurityDescriptorToSecurityDescriptor FAILED %d:", "LockDuration  : %d (seconds since acquired)", "LockOwner     : %ws  ", "IsLocked      : FALSE", "IsLocked      : TRUE", "[SC] QueryServiceLockStatus SUCCESS", "[SC] QueryServiceLockStatus needs %d bytes", "[SC] QueryServiceLockStatus FAILED %d", "[SC] GetServiceLockStatus: LocalAlloc FAILED %d:", "[SC] Will be unlocking database by exiting", "[SC] UnlockServiceDatabase SUCCESS", "[SC] UnlockServiceDatabase FAILED %d:", "Active database is locked.", "To unlock via API, press u: ", "[SC] LockServiceDatabase FAILED %d:", "Would you like to see help for the QUERY and QUERYEX commands? [ y | n ]: ", "sc start MyService", "EXAMPLE:", "sc <server> <command> <option> ", "  boot------------(ok | bad) Indicates whether the last boot should", "                  be saved as the last-known-good boot configuration", "  Lock------------Locks the Service Database", "  QueryLock-------Queries the LockStatus for the SCManager Database", "The following commands don't require a service name:", "Commands:", "  query-----------Queries the status for a service, or ", "                  enumerates the status for types of services.", "  queryex---------Queries the extended status for a service, or ", "                  enumerates the status for types of services.", "  start-----------Starts a service.", "  pause-----------Sends a PAUSE control request to a service.", "  interrogate-----Sends an INTERROGATE control request to a service.", "  continue--------Sends a CONTINUE control request to a service.", "  stop------------Sends a STOP request to a service.", "  config----------Changes the configuration of a service (persistant).", "  description-----Changes the description of a service.", "  failure---------Changes the actions taken by a service upon failure.", "  qc--------------Queries the configuration information for a service.", "  qdescription----Queries the description for a service.", "  qfailure--------Queries the actions taken by a service upon failure.", "  delete----------Deletes a service (from the registry).", "  create----------Creates a service. (adds it to the registry).", "  control---------Sends a control to a service.", "  sdshow----------Displays a service's security descriptor.", "  sdset-----------Sets a service's security descriptor.", "  GetDisplayName--Gets the DisplayName for a service.", "  GetKeyName------Gets the ServiceKeyName for a service.", "  EnumDepend------Enumerates Service Dependencies.", "Further help on commands can be obtained by typing: \"sc [command]\"", "The option <server> has the form \"\\\\ServerName\"", "sc <server> [command] [service name] <option1> <option2>...", "SC is a command line program used for communicating with the ", "NT Service Controller and services.", "[SC] QueryServiceStatus%s FAILED %d:", "[SC] EnumQueryServicesStatus:OpenService FAILED %d:", "ERROR: cannot specify a service name when enumerating a group", "Enum: more data, need %d bytes start resume at index %d", "[SC] EnumServicesStatus%s FAILED %d:", "[SC] OpenSCManager FAILED %d:", "ERROR, Invalid Option", "ERROR following \"state=\"!", "Must be \"inactive\" or \"all\"", "ERROR following \"state=\"", "ERROR following \"type=\"!", "Must be \"driver\" or \"service\"", "[SC] EnumQueryServicesStatus: LocalAlloc FAILED %d:", "*** Unrecognized Command ***", "sc <server> sdset <service name> <SD in SDDL format>", "Sets a service's security descriptor", "sc <server> sdshow <service name>", "Displays a service's security descriptor in SDDL format", "sc <server> EnumDepend <service name> <bufsize>", "Enumerates the Services that are dependent on this one", "[SC] GetServiceKeyName SUCCESS  Name = %ws", "required BufSize = %d", "[SC] GetServiceKeyName FAILED %d:", "[SC] GetServiceKeyName: LocalAlloc FAILED %d:", "sc <server> GetKeyName <service display name> <bufsize>", "Gets the key name associated with a particular service, using the display name as input", "[SC] GetServiceDisplayName SUCCESS  Name = %ws", "[SC] GetServiceDisplayName FAILED %d: %ws ", "[SC] GetServiceDisplayName: LocalAlloc FAILED %d:", "sc <server> GetDisplayName <service key name> <bufsize>", "Gets the display name associated with a particular service", "sc <server> boot <bad|ok>", "Indicates whether the last boot should be saved as the", "last-known-good boot configuration", "NotifyBootConfigStatus FAILED %d:", "[SC] DeleteService SUCCESS", "[SC] DeleteService FAILED %d:", "sc <server> delete [service name]", "Deletes a service entry from the registry.", "If the service is running, or another process has an", "open handle to the service, the service is simply marked", "for deletion.", "[SC] CloseServiceHandle FAILED %d:", "sc <server> qfailure [service name] <bufferSize>", "Retrieves the actions performed on service failure.", "sc <server> qdescription [service name] <bufferSize>", "Retrieves the description string of a service.", "sc <server> qc [service name] <bufferSize>", "Queries the configuration information for a service.", "sc <server> description [service name] [description]", "Sets the description string for a service.", "sc <server> stop [service name]", "Sends a STOP control request to a service.", "sc <server> continue [service name]", "Sends a CONTINUE control request to a service.", "sc <server> control [service name] <value>", "    <value> = user-defined control code", "    <value> = <paramchange|", "               netbindadd|netbindremove|", "               netbindenable|netbinddisable>", "See also sc stop, sc pause, etc.", "Sends a CONTROL code to a service.", "sc <server> interrogate [service name]", "Sends an INTERROGATE control request to a service.", "sc <server> pause [service name]", "Sends a PAUSE control request to a service.", "[SC] StartService: QueryServiceStatusEx FAILED %d:", "[SC] StartService FAILED %d:", "[SC] StartService: OpenService FAILED %d:", "sc <server> start [service name] <arg1> <arg2> ...", "Starts a service running.", "[SC] ERROR: a service name is required", "sc.pdb", "tHHt>HHt3", "HYYt?Ht5Ht+Ht!Ht", "HtLHtBHHt7", "t+Ht!Ht", "YYt!Ht", "t3Ht$Ht", "YYu\u001fG9}", "YYu\\G9}", "PSVh$8", "PWVh@7", "printf", "wcslen", "_wcsicmp", "wcscpy", "_getche", "wcscmp", "wcsncmp", "_c_exit", "_XcptFilter", "_cexit", "__winitenv", "__wgetmainargs", "_initterm", "__setusermatherr", "_adjust_fdiv", "__p__commode", "__p__fmode", "__set_app_type", "msvcrt.dll", "_controlfp", "_except_handler3", "QueryServiceConfigW", "OpenServiceW", "QueryServiceConfig2W", "ControlService", "ChangeServiceConfigW", "ChangeServiceConfig2W", "CloseServiceHandle", "CreateServiceW", "EnumDependentServicesW", "ConvertSecurityDescriptorToStringSecurityDescriptorW", "QueryServiceObjectSecurity", "SetServiceObjectSecurity", "ConvertStringSecurityDescriptorToSecurityDescriptorW", "QueryServiceLockStatusW", "UnlockServiceDatabase", "LockServiceDatabase", "QueryServiceStatus", "EnumServicesStatusExW", "EnumServiceGroupW", "EnumServicesStatusW", "GetServiceKeyNameW", "GetServiceDisplayNameW", "NotifyBootConfigStatus", "DeleteService", "QueryServiceStatusEx", "StartServiceW", "OpenSCManagerW", "ADVAPI32.dll", "FormatMessageW", "GetLastError", "LocalAlloc", "LocalFree", "GetModuleHandleA", "KERNEL32.dll", "RtlAdjustPrivilege", "ntdll.dll", "svcctrl", "DisplayName=", "password=", "depend=", "group=", "binPath=", "critical", "ignore", "severe", "normal", "error=", "disabled", "demand", "system", "start=", "filesys", "kernel", "interact", "reboot", "restart", "actions=", "command=", "reboot=", "infinite", "reset=", "bufsize=", "inactive", "state=", "adapter", "service", "driver", "sdshow", "EnumDepend", "GetKeyName", "GetDisplayName", "create", "delete", "querylock", "qfailure", "qdescription", "failure", "description", "config", "continue", "netbinddisable", "netbindenable", "netbindremove", "netbindadd", "paramchange", "control", "interrogate", "queryex", "VS_VERSION_INFO", "StringFileInfo", "040904B0", "CompanyName", "Microsoft Corporation", "FileDescription", "A tool to aid in developing services for WindowsNT", "FileVersion", "5.1.2600.0 (xpclient.010817-1148)", "InternalName", "sc.exe", "LegalCopyright", " Microsoft Corporation. All rights reserved.", "OriginalFilename", "sc.exe", "ProductName", "Microsoft", " Windows", " Operating System", "ProductVersion", "5.1.2600.0", "VarFileInfo", "Translation"]