["!This program cannot be run in DOS mode.", "`.data", "MFC42u.dll", "msvcrt.dll", "msvcp60.dll", "ADVAPI32.dll", "KERNEL32.dll", "NTDLL.DLL", "GDI32.dll", "USER32.dll", "OLEAUT32.dll", "ole32.dll", "OLEACC.dll", "SHELL32.dll", "SHLWAPI.dll", "urlmon.dll", "mmcbase.DLL", "UxTheme.dll", "DUSER.dll", "apphelp.dll", "MSIMG32.dll", "7B~nCB~b", "BB~\"xB~9", "B~6xB~", "E~5[E~", "B~4eF~", "B~{\u001fC~", "OwU+Swm", "Ow*VTw", "*G1M*G", "*GsM*G", "*GCL*G", "*Gd.+G", "*G#N*GE", "*G0N*G", "*GWM*G", "*Geb+G", "*GiL*G", "mmc.exe", "_GetAllocCounters@0", "Kernel32.dll", "Comctl32.dll", "ImageList_GetIcon", "CAMCWebViewCtrl", "FindActCtxSectionStringW", "GetFileMUIPath", "Qkkbal", "9>t!9~", "Hu%9N ", "t0@x-=", "failure in scanner", "parse allocation failure", "parser stack overflow", "parse error", "t(f98t#Pj ", "t>HHt:", "~8;~dr", "@QQQQQQ", ";C|tS;CxtN", "j!j j ", "ImageList_Destroy", "QueryActCtxW", "GetModuleHandleExW", "ImageList_AddMasked", "InitCommonControlsEx", "]ImageList_GetImageCount", "ActivateActCtx", "DeactivateActCtx", "CActionsPaneView", "fatal flex scanner internal error--no action found", "v SSSSh", "NXSSSWPj", "QP^[_]", "ImageList_ReadEx", "number", "CAMCDoc", "CAMCView", "CChildFrame", "CMainFrame", "COCXHostView", "CAMCTreeView", "FPu;Vh", "TraceMessageVa", "TraceMessage", "tGf97u", "VSSj%Sf", "GetSystemWow64DirectoryW", "ImageList_SetBkColor", "~D@_^[]", "305.1i", "ImageList_Create", "CreateUpDownControl", "CreateActCtxW", "SetCriticalSectionSpinCount", "TryEnterCriticalSection", "SwitchToThread", "9^ t_9^$tZ9^(tU9^,tP", "SSWSVh", "FLuR9M", "!F4!F8_^", "ImageList_ReplaceIcon", "QQWRRRj", "IsProcessorFeaturePresent", "kernel32.dll", "Unicows.dll", "IsolationAware function called after IsolationAwareCleanup", "8^mt/j%", "z8^nt/j)", "v4SVh\\", "t0HHt%", "Px9F0u&", "j7SSSSS", "InterlockedCompareExchange", "InterlockedPopEntrySList", "InterlockedPushEntrySList", "Ht$Hu!", "tOItDIt\u001fI", "t8HHt!-", "N~f;F~", "tX9F0v(", "out of dynamic memory in yy_create_buffer()", "input buffer overflow, can't enlarge buffer because scanner uses REJECT", "fatal flex scanner internal error--end of buffer missed", "&CAMCApp", "CStatBar", "CDockWindow", "CFileDialogEx", "Comdlg32.dll", "cYj`gzSCFolderTabView", "CDiskCleanupPage", "CConsolePropPage", "CConsolePropSheet", "CAMCStatusBar", "CViewTracker", "rCActionPane", "ZCActionPaneZone", "CActionPaneSection", "CActionPaneTask", "CDirectUIRender", "<ScannerFailure>", "PQQQQQQ", "SVWj\\3", "M QPVj", "_^[uoj", "M$QPVj", "t0Ht%Ht", "t:Ht,Ht", "t,Ht%Ht", "Ht>Ht1Ht#Ht", "PxPVhS+", "HtMHt>H", "HtnHt+Hu]", "rAQVSh", "GradientFill", "ImageList_Add", "tDWQWPj", "ImageList_Remove", "@ SSh'", "t89~Tu.h", "8OdtQ9", "r.PWVj", "8^dt\u001fj", "GetOpenFileNameW", "GetSaveFileNameW", "LresultFromObject", "AccessibleObjectFromWindow", "6C;w`u", "tTJt!Jud", "Q@;P@u:", "QL;PLu2", "Q@;P@u", "QH;PHu", "Q@;P@u", "ID;HDu", "u.97t*j", "tT9~,tO", "tQ9~,tL", "G,2F,_$", "G,2F,_$", "tH9~,tC", "~<Wh$E", "N(;N,t", "YYtjhpB", "QQSVW3", "pool exhausted", ";F _^u", "A4v-SV", "QQVWj\\", "HtUHtEHHt4", "t-HHu=", "CLSID\\{ADB880A6-D8FF-11CF-9377-00AA003B7A11}\\InprocServer32", "hhctrl.ocx", "ReleaseActCtx", "GetSystemWindowsDirectoryW", "Cd;C8w", "?ffffff", "ImageList_Read", "ImageList_Write", "ImageList_WriteEx", "r:WSh\\", "t,Ht$Ht", "MMCCustomStream", "rbVWh|", "CorBindToRuntimeEx", "rcVWj$", "r.VWj%", "riPSj#", "r<PSj$", "w4t+It!It", "tK8Y$tF", "f9A:t|", "tKSSh(", "Vx_^[]", "t@Ht8Ht#Ht", "y[9\u001ftW", "b;G|uc", "t-9:u)f", "9:[uCf", "Gd t(j", "333333", "uZ9M$uU;", "X;L:Tr", "HHtiHH", "tX9F0v(", "t:Ht(Ht", "HHtBHu5", "t6HHuc", "t2Ht(Ht", "PhVVVV", "9Q|t*9Qxt%", "VVVVWVh", "PPPPhC", "u$+M(Q", "u QVWS", "u QVWS", "u QVWS", "MFC42u.dll", "msvcrt.dll", "msvcp60.dll", "ADVAPI32.dll", "KERNEL32.dll", "GDI32.dll", "USER32.dll", "OLEAUT32.dll", "ole32.dll", "OLEACC.dll", "SHELL32.dll", "SHLWAPI.dll", "urlmon.dll", "mmcbase.DLL", "UxTheme.dll", "DUSER.dll", "apphelp.dll", "MSIMG32.dll", "wcscpy", "swprintf", "strtol", "fwrite", "wcsncpy", "_callnewh", "_except_handler3", "__CxxFrameHandler", "wcslen", "_wcsnicmp", "_vsnwprintf", "_wcsicmp", "_purecall", "__RTDynamicCast", "wcsncmp", "_ultow", "wcstoul", "memmove", "iswspace", "wcsrchr", "swscanf", "__argc", "__wargv", "realloc", "malloc", "wcscmp", "wcstol", "_mbsnbcnt", "_mbslen", "_CxxThrowException", "wcsstr", "wcschr", "?what@exception@@UBEPBDXZ", "??0exception@@QAE@ABQBD@Z", "??1exception@@UAE@XZ", "??0exception@@QAE@ABV0@@Z", "_c_exit", "_XcptFilter", "_snwprintf", "_cexit", "_wcmdln", "__wgetmainargs", "_initterm", "__setusermatherr", "_controlfp", "_onexit", "__dllonexit", "??1type_info@@UAE@XZ", "?terminate@@YAXXZ", "__set_app_type", "__p__fmode", "__p__commode", "_adjust_fdiv", "?npos@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@2IB", "??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@ABV01@@Z", "?erase@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV12@II@Z", "?data@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ", "??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV?$allocator@G@1@@Z", "??4?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z", "??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@PBGABV?$allocator@G@1@@Z", "??1?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@XZ", "??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@ABV01@@Z", "?c_str@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ", "?size@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ", "??1_Lockit@std@@QAE@XZ", "??0_Lockit@std@@QAE@XZ", "?length@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIXZ", "?erase@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEPAGPAG0@Z", "?begin@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEPAGXZ", "?end@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEPAGXZ", "?end@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEPBGXZ", "??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@PBG@Z", "??_F?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEXXZ", "??0?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAE@IGABV?$allocator@G@1@@Z", "??A?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAGI@Z", "?find_first_of@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QBEIPBGI@Z", "?append@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV12@PBGI@Z", "??Y?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@QAEAAV01@G@Z", "?nothrow@std@@3Unothrow_t@1@B", "?_C@?1??_Nullstr@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@CAPBGXZ@4GB", "??8std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@0@Z", "?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ", "??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@PBD@Z", "??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z", "??8std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@PBG@Z", "??9std@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@0@Z", "??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@PBG@Z", "??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ", "??Hstd@@YA?AV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@ABV10@G@Z", "??Mstd@@YA_NABV?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@0@0@Z", "RegCreateKeyExW", "RegOpenKeyExW", "RegQueryValueExW", "RegCloseKey", "UnregisterTraceGuids", "RegisterTraceGuidsW", "GetTraceLoggerHandle", "GetTraceEnableLevel", "RegQueryValueExA", "RegOpenKeyExA", "GetTraceEnableFlags", "TraceEvent", "RegSetValueExW", "MultiByteToWideChar", "HeapAlloc", "GetProcessHeap", "HeapFree", "GetFileSize", "FindNextFileW", "FindClose", "GlobalAlloc", "GlobalLock", "GlobalUnlock", "QueryPerformanceCounter", "GetCurrentProcess", "FlushInstructionCache", "GetTickCount", "GlobalFree", "FindResourceW", "CompareStringW", "LoadLibraryA", "DeleteAtom", "WriteFile", "AddAtomW", "CreateFileW", "GetFileTime", "GetCurrentProcessId", "GetSystemTimeAsFileTime", "VirtualQuery", "GetSystemInfo", "VirtualAlloc", "VirtualProtect", "DeleteFileW", "InterlockedDecrement", "SetCurrentDirectoryW", "GetSystemDirectoryW", "EnterCriticalSection", "LeaveCriticalSection", "HeapDestroy", "InterlockedIncrement", "DeleteCriticalSection", "InitializeCriticalSection", "lstrcpyW", "lstrlenW", "GetVersionExW", "GetCurrentDirectoryW", "CreateProcessW", "CloseHandle", "GetCommandLineW", "OutputDebugStringW", "GetFullPathNameW", "GetLongPathNameW", "ExpandEnvironmentStringsW", "lstrcmpiW", "lstrcmpW", "FreeLibrary", "OutputDebugStringA", "GetModuleFileNameW", "SetLastError", "GetLastError", "LoadLibraryW", "LocalAlloc", "LocalFree", "GetCurrentThreadId", "GetVersion", "GetFileAttributesW", "GetProcAddress", "GetModuleHandleW", "GetModuleHandleA", "TerminateProcess", "UnhandledExceptionFilter", "SetUnhandledExceptionFilter", "GetStartupInfoW", "VirtualFree", "RaiseException", "FindAtomW", "LoadResource", "GetWindowsDirectoryW", "lstrcpynW", "HeapCreate", "InterlockedExchange", "InterlockedExchangeAdd", "FormatMessageW", "GlobalReAlloc", "CreateDirectoryW", "ReadFile", "MulDiv", "TlsGetValue", "HeapReAlloc", "LockResource", "SizeofResource", "GetUserDefaultUILanguage", "GetLocaleInfoW", "TlsAlloc", "TlsFree", "TlsSetValue", "GetAtomNameW", "SetProcessWorkingSetSize", "GetVersionExA", "FindFirstFileW", "SetBrushOrgEx", "SetStretchBltMode", "GetBrushOrgEx", "GetDIBits", "CreateDIBSection", "SetTextAlign", "SetBkMode", "SetTextColor", "CreatePatternBrush", "PlayEnhMetaFile", "CreateRectRgn", "CreateDIBPatternBrushPt", "StretchDIBits", "LPtoDP", "ExtTextOutA", "SetBkColor", "Escape", "ExtTextOutW", "TextOutW", "PatBlt", "RectVisible", "PtVisible", "CreateSolidBrush", "CreateCompatibleBitmap", "CreateCompatibleDC", "BitBlt", "DeleteDC", "GetDeviceCaps", "GetLayout", "SetLayout", "GetTextMetricsW", "FillRgn", "PtInRegion", "OffsetRgn", "CreatePolygonRgn", "GetStockObject", "SelectObject", "GetTextExtentPoint32W", "GetObjectW", "DeleteObject", "CreateFontIndirectW", "SelectPalette", "CreateHalftonePalette", "GetPixel", "StretchBlt", "GetObjectA", "RealizePalette", "DeleteEnhMetaFile", "SetParent", "GetWindowPlacement", "SetWindowLongW", "EnableMenuItem", "GetSystemMenu", "BringWindowToTop", "BeginDeferWindowPos", "EndDeferWindowPos", "DeferWindowPos", "GetCapture", "AdjustWindowRectEx", "NotifyWinEvent", "ReleaseCapture", "SetMenuDefaultItem", "GetForegroundWindow", "CharLowerW", "GetNextDlgTabItem", "GetDlgItem", "TrackPopupMenuEx", "IsWindowEnabled", "DrawFocusRect", "DefWindowProcW", "SetWindowPos", "SetTimer", "KillTimer", "GetMenuItemID", "GetWindowTextW", "GetClassLongW", "GetMenu", "SetMenu", "IsZoomed", "ChangeClipboardChain", "SetClipboardViewer", "SetForegroundWindow", "SetActiveWindow", "EnumThreadWindows", "DrawFrameControl", "UnionRect", "DestroyIcon", "GetSubMenu", "UnhookWindowsHookEx", "CallNextHookEx", "IsChild", "CopyImage", "DrawIconEx", "GetDoubleClickTime", "CharUpperW", "GetMessageTime", "SetWindowsHookExW", "CreatePopupMenu", "GetClassInfoExW", "CreateWindowExW", "wsprintfW", "SetWindowTextW", "GetWindowTextLengthW", "GetDesktopWindow", "ReleaseDC", "InvalidateRgn", "CallWindowProcW", "EndPaint", "SetWindowPlacement", "GetClassNameW", "CreateAcceleratorTableW", "IsMenu", "TabbedTextOutW", "GrayStringW", "DestroyAcceleratorTable", "LoadAcceleratorsW", "TranslateAcceleratorW", "SetMenuItemInfoW", "DestroyMenu", "GetMenuItemInfoW", "GetMenuStringW", "GetMenuItemCount", "AppendMenuW", "DrawEdge", "RegisterWindowMessageW", "MapWindowPoints", "GetCursorPos", "SetCapture", "SetFocus", "MoveWindow", "GetKeyState", "GetSysColorBrush", "IntersectRect", "SystemParametersInfoA", "SendMessageA", "SetWindowLongA", "EqualRect", "CreateIconIndirect", "DefWindowProcA", "PostMessageA", "GetWindowLongA", "PostQuitMessage", "InsertMenuW", "GetMenuState", "DeleteMenu", "FillRect", "InflateRect", "SetRectEmpty", "PtInRect", "IsRectEmpty", "MessageBoxW", "MonitorFromPoint", "GetMonitorInfoW", "SystemParametersInfoW", "GetFocus", "InvalidateRect", "EnumChildWindows", "GetMessagePos", "SetCursor", "GetDlgCtrlID", "GetSystemMetrics", "ShowWindow", "GetClassInfoW", "LoadCursorW", "DrawTextW", "LoadImageW", "BeginPaint", "OffsetRect", "SendMessageTimeoutW", "GetSysColor", "EnableWindow", "RegisterClassExW", "ScreenToClient", "ClientToScreen", "GetClientRect", "GetWindowRect", "IsIconic", "ChildWindowFromPointEx", "GetIconInfo", "WinHelpW", "CopyIcon", "SetWindowRgn", "LoadMenuW", "SendMessageW", "PostMessageW", "UpdateWindow", "IsWindowVisible", "GetParent", "MessageBeep", "DestroyWindow", "IsWindow", "PeekMessageW", "LoadIconW", "CharNextW", "LoadStringW", "GetWindow", "SetRect", "CopyRect", "GetWindowLongW", "RedrawWindow", "GetWindowThreadProcessId", "FindWindowExW", "ModifyMenuW", "CoInitializeEx", "CoUninitialize", "OleInitialize", "OleUninitialize", "CoFreeUnusedLibraries", "CoCreateInstance", "CoRegisterClassObject", "CoTaskMemFree", "ProgIDFromCLSID", "OleRun", "CoDisconnectObject", "CoCreateGuid", "RevokeDragDrop", "DoDragDrop", "RegisterDragDrop", "CoGetClassObject", "CreateStreamOnHGlobal", "StringFromCLSID", "CoTaskMemAlloc", "OleLockRunning", "CLSIDFromProgID", "CLSIDFromString", "CoGetMalloc", "StringFromGUID2", "CreateILockBytesOnHGlobal", "StgOpenStorageOnILockBytes", "GetHGlobalFromStream", "CoRevokeClassObject", "CreateStdAccessibleObject", "AccessibleObjectFromWindow", "LresultFromObject", "ShellExecuteExW", "ShellAboutW", "SHGetMalloc", "SHGetPathFromIDListW", "SHGetSpecialFolderLocation", "ExtractIconW", "ExtractIconExW", "SHGetFolderPathW", "SHGetSpecialFolderPathW", "PathFindFileNameW", "CoInternetGetSession", "?InterfaceMethodException@BookKeeping@@SGXHPBG0KPAU_EXCEPTION_POINTERS@@@Z", "?GetSnapinName@BookKeeping@@SGPBGH@Z", "?MMCNullInterface@BookKeeping@@SGXHPBG0@Z", "?InvalidInterface@BookKeeping@@SGXHPBG0@Z", "?ReleaseSnapinInterface@BookKeeping@@SGJPAUIUnknown@@H@Z", "?AddSnapinInterface@BookKeeping@@SG_NPAUIUnknown@@PBGAAH@Z", "?MMCInterfaceError@BookKeeping@@SGXHPBG0@Z", "?AddSnapin@BookKeeping@@SGJPBGAAH@Z", "?RemoveItem@BookKeeping@@SGJPAX@Z", "?AddItem@BookKeeping@@SGJAAVItemHandle@@@Z", "??7SC@mmcerror@@QBEHXZ", "?s_hWnd@SC@mmcerror@@0PAUHWND__@@A", "?Clear@SC@mmcerror@@QAEXXZ", "?FromMMC@SC@mmcerror@@QAEAAV12@J@Z", "?TraceSnapinError@@YGXPBGABVSC@mmcerror@@@Z", "??1?$CEventLock@UAppEvents@@@@QAE@XZ", "?FatalError@SC@mmcerror@@QBEXXZ", "?Throw@SC@mmcerror@@QAEXXZ", "?Throw@SC@mmcerror@@QAEXJ@Z", "?FromWin32@SC@mmcerror@@QAEAAV12@J@Z", "?MMCErrorBox@@YGHPBGI@Z", "?IsError@SC@mmcerror@@QBE_NXZ", "?Release@CMMCStrongReferences@@SGKXZ", "?AddRef@CMMCStrongReferences@@SGKXZ", "?GetComObjectEventSource@@YGAAV?$CEventSource@VCComObjectObserver@@VCVoid@@V2@V2@V2@@@XZ", "??8SC@mmcerror@@QBE_NABV01@@Z", "?GetEventBuffer@@YGAAVCEventBuffer@@XZ", "?MMCErrorBox@@YGHII@Z", "?GetStringModule@@YGPAUHINSTANCE__@@XZ", "?s_CallDepth@SC@mmcerror@@0IA", "?ScEmitOrPostpone@CEventBuffer@@QAE?AVSC@mmcerror@@PAUIDispatch@@JPAVCComVariant@ATL@@H@Z", "?MMC_PickIconDlg@@YGHPAUHWND__@@PAGIPAH@Z", "?FindAllSnapinUIThreads@BookKeeping@@SGJPAPAKPAK@Z", "?LKResult2HRESULT@BookKeeping@@SGJJ@Z", "??0SC@mmcerror@@QAE@J@Z", "??0SC@mmcerror@@QAE@ABV01@@Z", "??1SC@mmcerror@@QAE@XZ", "??4SC@mmcerror@@QAEAAV01@ABV01@@Z", "?ScFromMMC@@YG?AVSC@mmcerror@@J@Z", "?SetFunctionName@SC@mmcerror@@QAEXPBG@Z", "??9SC@mmcerror@@QBE_NJ@Z", "?FindItem@BookKeeping@@SGPAVItemHandle@@PAX@Z", "??4SC@mmcerror@@QAEAAV01@J@Z", "?TraceError@@YGXPBGABVSC@mmcerror@@@Z", "??BSC@mmcerror@@QBE_NXZ", "?MMCUpdateRegistry@@YGJHPBVCObjectRegParams@@PBVCControlRegParams@@@Z", "?LoadStandardOverlays@@YGJPAU_IMAGELIST@@HPAH1@Z", "?LastRefReleased@CMMCStrongReferences@@SG_NXZ", "?GetHelpID@SC@mmcerror@@QAEKXZ", "?GetHelpFile@SC@mmcerror@@SGPBGXZ", "?ToHr@SC@mmcerror@@QBEJXZ", "?GetErrorMessage@SC@mmcerror@@QBEXIPAG@Z", "?TraceAndClear@SC@mmcerror@@QAEXXZ", "?ScSetConsoleEventDispatcher@CConsoleEventDispatcherProvider@@SG?AVSC@mmcerror@@PAVCConsoleEventDispatcher@@@Z", "?MMCErrorBox@@YGHPBGVSC@mmcerror@@I@Z", "?FromLastError@SC@mmcerror@@QAEAAV12@XZ", "?SetMainThreadID@SC@mmcerror@@SGXK@Z", "?SetHWnd@SC@mmcerror@@SGXPAUHWND__@@@Z", "?MMCErrorBox@@YGHVSC@mmcerror@@I@Z", "??8SC@mmcerror@@QBE_NJ@Z", "DrawThemeBackground", "OpenThemeData", "CloseThemeData", "GetThemePartSize", "SetGadgetFocus", "SetGadgetParent", "SetGadgetRect", "SetGadgetRootInfo", "LookupGadgetTicket", "InvalidateGadget", "FindGadgetFromPoint", "GetGadgetFocus", "InitGadgets", "FindStdColor", "CreateGadget", "SetGadgetMessageFilter", "DeleteHandle", "GetGadgetAnimation", "BuildInterpolation", "BuildAnimation", "GetGadgetSize", "DUserPostEvent", "DUserSendEvent", "GetStdColorBrushI", "GetStdColorI", "UtilDrawBlendRect", "GetGadgetTicket", "MapGadgetPoints", "SetGadgetBufferInfo", "GetGadgetRgn", "GetGadgetRect", "SetGadgetStyle", "AttachWndProcW", "ForwardGadgetMessage", "CreateAction", "ApphelpCheckShellObject", "AlphaBlend", "TransparentBlt", "GradientFill", "mmc.pdb", ".?AVCObject@@", ".?AVCMenu@@", ".?AVCCmdTarget@@", ".?AVCWnd@@", ".?AVCMainFrame@@", ".?AVCComObjectRootBase@ATL@@", ".?AV?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@", ".?AUIUnknown@@", ".?AVCObserverBase@@", ".?AVCAMCViewObserver@@", ".?AUIDispatch@@", ".?AVCConsoleDocument@@", ".?AVCView@@", ".?AVCAMCView@@", ".?AVCEventSourceBase@@", ".?AVCXMLObject@@", ".?AVCTiedObject@@", ".?AV?$_CEventSource@VCAMCDocumentObserver@@@@", ".?AV?$_CEventSource1@VCAMCDocumentObserver@@@@", ".?AV?$_CEventSource5@VCVoid@@@@", ".?AV?$_CEventSource4@VCVoid@@@@", ".?AV?$_CEventSource3@VCVoid@@@@", ".?AV?$_CEventSource2@VCVoid@@@@", ".?AV?$CEventSource@VCAMCDocumentObserver@@VCVoid@@V2@V2@V2@@@", ".?AVCConsoleFilePersistor@@", ".?AVCDocument@@", ".?AVCAMCDoc@@", ".?AVCChildFrame@@", ".?AVCFrameWnd@@", ".?AVCConsoleView@@", ".?AVCFocusHandler@@", ".?AVCAMCNavigator@@", ".?AV?$_CEventSource@VCAMCViewObserver@@@@", ".?AVCTreeViewObserver@@", ".?AVCListViewActivationObserver@@", ".?AVCOCXHostActivationObserver@@", ".?AVCAMCDocumentObserver@@", ".?AVCListViewObserver@@", ".?AV?$_CEventSource1@VCAMCViewObserver@@@@", ".?AV?$CEventSource@VCAMCViewObserver@@VCVoid@@V2@V2@V2@@@", ".?AVCGdiObject@@", ".?AVCFont@@", ".?AVCStatic@@", ".?AV?$_CEventSource@VCActionsPaneObserver@@@@", ".?AV?$_CEventSource1@VCActionsPaneObserver@@@@", ".?AV?$CEventSource@VCActionsPaneObserver@@VCVoid@@V2@V2@V2@@@", ".?AVCActionsPaneView@@", ".?AVCBitmap@@", ".?AVCBrush@@", ".?AVCAMCListView@@", ".?AVCCtrlView@@", ".?AVCListView@@", ".?AV?$_CEventSource@VCListViewActivationObserver@@@@", ".?AV?$_CEventSource1@VCListViewActivationObserver@@@@", ".?AV?$CEventSource@VCListViewActivationObserver@@VCVoid@@V2@V2@V2@@@", ".?AVCMMCViewDropTarget@@", ".?AVCConsoleStatusBar@@", ".?AVCMDIFrameWnd@@", ".?AVCMDIChildWnd@@", ".?AVCToolBarCtrl@@", ".?AVCToolBarCtrlBase@@", ".?AVCToolBarCtrlEx@@", ".?AVCCmdUI@@", ".?AVCToolCmdUIEx@@", ".?AVCRebarWnd@@", ".?AVCDescriptionCtrl@@", ".?AVCMMCToolBarCtrlEx@@", ".?AVCDockWindow@@", ".?AVCRebarDockWindow@@", ".?AVCStatBar@@", ".?AUIWebSink@@", ".?AV?$IDispatchImpl@UIWebSink@@$1?IID_IWebSink@@3U_GUID@@B$1?LIBID_MMCInternalWebOcx@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AVCWebEventSink@@", ".?AVCDialog@@", ".?AVCConsoleDialog@@", ".?AVCAddFavDialog@@", ".?AVCAddFavGroupDialog@@", ".?AVCOrganizeFavDialog@@", ".?AVCFavFolderDialog@@", ".?AVCCommonDialog@@", ".?AVCFileDialog@@", ".?AVCFileDialogEx@@", ".?AVCPen@@", ".?AVCRgn@@", ".?AVCFolderTabMetrics@@", ".?AVCFolderTabView@@", ".?AVCConsoleFrame@@", ".?AVCMDIClientWnd@@", ".?AVCMDIMenuDecoration@@", ".?AVCMenuBar@@", ".?AV?$_CEventSource@VCOCXHostActivationObserver@@@@", ".?AV?$CComObjectRootEx@VCComSingleThreadModel@ATL@@@ATL@@", ".?AUIAxWinAmbientDispatch@@", ".?AV?$IDispatchImpl@UIAxWinAmbientDispatch@@$1?IID_IAxWinAmbientDispatch@@3U_GUID@@B$1?LIBID_ATLLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AUIDocHostUIHandler@@", ".?AUIAdviseSink@@", ".?AUIServiceProvider@@", ".?AUIObjectWithSite@@", ".?AV?$IObjectWithSiteImpl@VCAxHostWindow@ATL@@@ATL@@", ".?AUIParseDisplayName@@", ".?AUIOleContainer@@", ".?AUIOleControlSite@@", ".?AUIOleWindow@@", ".?AUIOleInPlaceSite@@", ".?AUIOleInPlaceSiteEx@@", ".?AUIOleInPlaceSiteWindowless@@", ".?AUIOleClientSite@@", ".?AUIAxWinHostWindow@@", ".?AVCMessageMap@ATL@@", ".?AVCWindow@ATL@@", ".?AV?$CWindowImplRoot@VCWindow@ATL@@@ATL@@", ".?AV?$CWindowImplBaseT@VCWindow@ATL@@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@", ".?AV?$CWindowImpl@VCAxHostWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@", ".?AV?$CComCoClass@VCAxHostWindow@ATL@@$1?GUID_NULL@@3U_GUID@@B@ATL@@", ".?AVCAxHostWindow@ATL@@", ".?AV?$_CEventSource1@VCOCXHostActivationObserver@@@@", ".?AV?$CEventSource@VCOCXHostActivationObserver@@VCVoid@@V2@V2@V2@@@", ".?AVCOCXHostView@@", ".?AUIOleInPlaceUIWindow@@", ".?AUIOleInPlaceFrame@@", ".?AV?$CWindowImpl@VCAxFrameWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@", ".?AVCAxFrameWindow@ATL@@", ".?AV?$CComObject@VCAxFrameWindow@ATL@@@ATL@@", ".?AV?$CWindowImpl@VCAxUIWindow@ATL@@VCWindow@2@V?$CWinTraits@$0FGAAAAAA@$0A@@2@@ATL@@", ".?AVCAxUIWindow@ATL@@", ".?AV?$CComObject@VCAxUIWindow@ATL@@@ATL@@", ".?AVCMMCAxHostWindow@@", ".?AV?$CComObjectNoLock@VCMMCAxHostWindow@@@ATL@@", ".?AVCPropertyPage@@", ".?AVCConsolePropPage@@", ".?AVCDiskCleanupPage@@", ".?AVCPropertySheet@@", ".?AVCConsolePropSheet@@", ".?AVCSyncObject@@", ".?AVCCriticalSection@@", ".?AVCAMCStatusBar@@", ".?AVCSaveFileDialog@@", ".?AVCToolbarTracker@@", ".?AVCToolbarTrackerAuxWnd@@", ".?AVCTreeView@@", ".?AV?$_CEventSource@VCTreeViewObserver@@@@", ".?AV?$_CEventSource1@VCTreeViewObserver@@@@", ".?AV?$CEventSource@VCTreeViewObserver@@VCVoid@@V2@V2@V2@@@", ".?AVCAMCTreeView@@", ".?AVCTreeObserver@@", ".?AVCTreeCtrl@@", ".?AVCTreeObserverTreeImpl@@", ".?AVCDC@@", ".?AVCClientDC@@", ".?AVCHalftoneClientDC@@", ".?AVCViewTracker@@", ".?AV?$CComObject@VCWebEventSink@@@ATL@@", ".?AVCAMCWebViewCtrl@@", ".?AVCAccel@@", ".?AVCActionPane@@", ".?AV?$CList@PAVCActionPaneTask@@PAV1@@@", ".?AVCActionPaneZone@@", ".?AVCActionPaneSection@@", ".?AVCActionPaneTask@@", ".?AVCDirectUIRender@@", ".?AVCSubclasser@@", ".?AVCFrameSubclasser@CToolbarTracker@@", ".?AVCFontLinker@@", ".?AVXMLListCollectionBase@@", ".?AVCXMLWindowPlacement@@", ".?AUIStringTablePrivate@@", ".?AUIStringTablePrivate2@@", ".?AVCMasterStringTable@@", ".?AV?$CComObject@VCMasterStringTable@@@ATL@@", ".?AVCBookmark@@", ".?AVCDynamicPathEntry@@", ".?AVCSerialObject@@", ".?AVCResultViewType@@", ".?AVCColumnInfo@@", ".?AV?$list@VCColumnInfo@@V?$allocator@VCColumnInfo@@@std@@@std@@", ".?AV?$XMLListCollectionImp@V?$list@VCColumnInfo@@V?$allocator@VCColumnInfo@@@std@@@std@@@@", ".?AVCColumnInfoList@@", ".?AVCTreeSource@@", ".?AV?$EventSource@VCTreeObserver@@@@", ".?AVCFavObject@@", ".?AV?$EventSourceImpl@VCTreeObserver@@@@", ".?AVCFavorites@@", ".?AVCEntry@@", ".?AV?$XMLListCollectionWrap@V?$list@VCEntry@@V?$allocator@VCEntry@@@std@@@std@@@@", ".?AVCStringTable@@", ".?AVCSnapInReference@@", ".?AVCCOMSnapInReference@@", ".?AVCFxSnapInReference@@", ".?AVElement@DirectUI@@", ".?AVActClipper@@", ".?AVActExpando@@", ".?AVCLKRLinearHashTable@LKRhash@@", ".?AV?$CTypedHashTable@VResultItemIndexCache@@VResultItemIndexRecord@@JVCLKRLinearHashTable@LKRhash@@@LKRhash@@", ".?AVResultItemIndexCache@@", ".?AVCCommandLineInfo@@", ".?AVCMMCCommandLineInfo@@", ".?AVCDocTemplate@@", ".?AVCMultiDocTemplate@@", ".?AVCAMCMultiDocTemplate@@", ".?AVCConsoleEventDispatcher@@", ".?AVCDocManager@@", ".?AVCAMCDocManager@@", ".?AUIClassFactory@@", ".?AVCComClassFactory@ATL@@", ".?AV?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@", ".?AUISupportErrorInfo@@", ".?AV?$ISupportErrorInfoImpl@$1?_GUID_a3afb9cc_b653_4741_86ab_f0470ec1384c@@3U__s_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?_GUID_a3afb9cc_b653_4741_86ab_f0470ec1384c@@3U__s_GUID@@B$1?CLSID_Application@@3U_GUID@@B@@", ".?AVCAMCViewToolbarsObserver@@", ".?AVCWinThread@@", ".?AVCWinApp@@", ".?AVCAMCApp@@", ".?AVCComObjectObserver@@", ".?AUIExternalConnection@@", ".?AU_Application@@", ".?AV?$IDispatchImpl@U_Application@@$1?_GUID_a3afb9cc_b653_4741_86ab_f0470ec1384c@@3U__s_GUID@@B$1?LIBID_MMC20@@3U_GUID@@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$CMMCIDispatchImpl@U_Application@@$1?CLSID_Application@@3U_GUID@@B$1?LIBID_MMC20@@3U3@B@@", ".?AUIProvideClassInfo@@", ".?AUIProvideClassInfo2@@", ".?AV?$IProvideClassInfo2Impl@$1?CLSID_Application@@3U_GUID@@B$1?DIID_AppEvents@@3U2@B$1?LIBID_MMC20@@3U2@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$_ICPLocator@$1?DIID_AppEvents@@3U_GUID@@B@ATL@@", ".?AV?$IConnectionPointImpl@VCMMCApplication@@$1?DIID_AppEvents@@3U_GUID@@BVCComDynamicUnkArray@ATL@@@ATL@@", ".?AUIConnectionPointContainer@@", ".?AV?$IConnectionPointContainerImpl@VCMMCApplication@@@ATL@@", ".?AV?$CComCoClass@VCMMCApplication@@$1?CLSID_Application@@3U_GUID@@B@ATL@@", ".?AVCMMCApplication@@", ".?AV?$CComObject@VCMMCApplication@@@ATL@@", ".?AVCStringTableStringBase@@", ".?AVCStringTableString@@", ".?AVCTiedComObjectRoot@@", ".?AVCXMLValueExtension@@", ".?AUFrameState2@@", ".?AVCFrameState@@", ".?AVCXMLEnumeration@@", ".?AV?$CTiedComObject@VCAMCDoc@@@@", ".?AVCXMLPersistableIcon@@", ".?AV?$ISupportErrorInfoImpl@$1?_GUID_225120d6_1e0f_40a3_93fe_1079e6a8017b@@3U__s_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?_GUID_225120d6_1e0f_40a3_93fe_1079e6a8017b@@3U__s_GUID@@B$1?GUID_NULL@@3U_GUID@@B@@", ".?AV?$ISupportErrorInfoImpl@$1?_GUID_d6b8c29d_a1ff_4d72_aab0_e381e9b9338d@@3U__s_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?_GUID_d6b8c29d_a1ff_4d72_aab0_e381e9b9338d@@3U__s_GUID@@B$1?GUID_NULL@@3U_GUID@@B@@", ".?AUDocument@@", ".?AV?$IDispatchImpl@UDocument@@$1?_GUID_225120d6_1e0f_40a3_93fe_1079e6a8017b@@3U__s_GUID@@B$1?LIBID_MMC20@@3U_GUID@@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$CMMCIDispatchImpl@UDocument@@$1?GUID_NULL@@3U_GUID@@B$1?LIBID_MMC20@@3U3@B@@", ".?AUViews@@", ".?AV?$IDispatchImpl@UViews@@$1?_GUID_d6b8c29d_a1ff_4d72_aab0_e381e9b9338d@@3U__s_GUID@@B$1?LIBID_MMC20@@3U_GUID@@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$CMMCIDispatchImpl@UViews@@$1?GUID_NULL@@3U_GUID@@B$1?LIBID_MMC20@@3U3@B@@", ".?AVCMMCDocument@@", ".?AV_CMMCViews@@", ".?AV?$CComObject@VCMMCDocument@@@ATL@@", ".?AV?$CMMCNewEnumImpl@V_CMMCViews@@VCAMCViewPosition@@VCAMCDoc@@@@", ".?AV?$CComObject@V?$CMMCNewEnumImpl@V_CMMCViews@@VCAMCViewPosition@@VCAMCDoc@@@@@ATL@@", ".?AVCViewTemplateList@@", ".?AVCAMCViewToolbarsMgr@@", ".?AVCMMCToolbarIntf@@", ".?AVCIdleTask@@", ".?AVSnapinInterfaceWrapper@@", ".?AVIUnknownWrapper@@", ".?AV?$_CEventSource@VCListViewObserver@@@@", ".?AV?$_CEventSource1@VCListViewObserver@@@@", ".?AV?$CEventSource@VCListViewObserver@@VCVoid@@V2@V2@V2@@@", ".?AUIMMCListView@@", ".?AVCCCListViewCtrl@@", ".?AV?$CComObject@VCCCListViewCtrl@@@ATL@@", ".?AVItemHandle@@", ".?AVCResultItem@@", ".?AV?$CTiedComObject@VCAMCView@@@@", ".?AV?$ISupportErrorInfoImpl@$1?_GUID_6efc2da2_b38c_457e_9abb_ed2d189b8c38@@3U__s_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?_GUID_6efc2da2_b38c_457e_9abb_ed2d189b8c38@@3U__s_GUID@@B$1?GUID_NULL@@3U_GUID@@B@@", ".?AV?$ISupportErrorInfoImpl@$1?_GUID_e5e2d970_5bb3_4306_8804_b0968a31c8e6@@3U__s_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?_GUID_e5e2d970_5bb3_4306_8804_b0968a31c8e6@@3U__s_GUID@@B$1?GUID_NULL@@3U_GUID@@B@@", ".?AUITaskPadHost@@", ".?AVCTaskPadHost@@", ".?AV?$CComObject@VCTaskPadHost@@@ATL@@", ".?AV?$_CEventSource@VCAMCViewToolbarsObserver@@@@", ".?AV?$_CEventSource@VCVerbObserver@@@@", ".?AV?$_CEventSource1@VCAMCViewToolbarsObserver@@@@", ".?AVCDeferredLayout@CAMCView@@", ".?AV?$_CEventSource1@VCVerbObserver@@@@", ".?AV?$CEventSource@VCAMCViewToolbarsObserver@@VCVoid@@V2@V2@V2@@@", ".?AUView@@", ".?AV?$IDispatchImpl@UView@@$1?_GUID_6efc2da2_b38c_457e_9abb_ed2d189b8c38@@3U__s_GUID@@B$1?LIBID_MMC20@@3U_GUID@@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$CMMCIDispatchImpl@UView@@$1?GUID_NULL@@3U_GUID@@B$1?LIBID_MMC20@@3U3@B@@", ".?AUFrame@@", ".?AV?$IDispatchImpl@UFrame@@$1?_GUID_e5e2d970_5bb3_4306_8804_b0968a31c8e6@@3U__s_GUID@@B$1?LIBID_MMC20@@3U_GUID@@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$CMMCIDispatchImpl@UFrame@@$1?GUID_NULL@@3U_GUID@@B$1?LIBID_MMC20@@3U3@B@@", ".?AV?$CEventSource@VCVerbObserver@@VCVoid@@V2@V2@V2@@@", ".?AVCAMCViewToolbars@@", ".?AV?$CRefCountedObject@VCAMCViewToolbars@@@@", ".?AVCMMCView@@", ".?AVCMMCViewFrame@@", ".?AVCStdVerbButtons@@", ".?AV?$CComObject@VCMMCView@@@ATL@@", ".?AV?$CComObject@VCMMCViewFrame@@@ATL@@", ".?AVCMemento@@", ".?AVCListFontLinker@@", ".?AVCHeaderCtrl@@", ".?AVCAMCHeaderCtrl@@", ".?AV?$CTiedComObject@VCCCListViewCtrl@@@@", ".?AV?$TSnapinInterfaceWrapper@UIResultDataCompare@@$00@@", ".?AV?$TSnapinInterfaceWrapper@UIResultDataCompareEx@@$00@@", ".?AVIResultDataCompareWrapper@@", ".?AVIResultDataCompareExWrapper@@", ".?AV?$ISupportErrorInfoImpl@$1?_GUID_383d4d97_fc44_478b_b139_6323dc48611c@@3U__s_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?_GUID_383d4d97_fc44_478b_b139_6323dc48611c@@3U__s_GUID@@B$1?GUID_NULL@@3U_GUID@@B@@", ".?AV?$ISupportErrorInfoImpl@$1?_GUID_313b01df_b22f_4d42_b1b8_483cdcf51d35@@3U__s_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?_GUID_313b01df_b22f_4d42_b1b8_483cdcf51d35@@3U__s_GUID@@B$1?GUID_NULL@@3U_GUID@@B@@", ".?AV?$ISupportErrorInfoImpl@$1?_GUID_fd1c5f63_2b16_4d06_9ab3_f45350b940ab@@3U__s_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?_GUID_fd1c5f63_2b16_4d06_9ab3_f45350b940ab@@3U__s_GUID@@B$1?GUID_NULL@@3U_GUID@@B@@", ".?AV?$ISupportErrorInfoImpl@$1?_GUID_f81ed800_7839_4447_945d_8e15da59ca55@@3U__s_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?_GUID_f81ed800_7839_4447_945d_8e15da59ca55@@3U__s_GUID@@B$1?GUID_NULL@@3U_GUID@@B@@", ".?AVCImageList@@", ".?AVCSysColorImageList@@", ".?AUNode@@", ".?AVCMMCResultNode@@", ".?AV?$IDispatchImpl@UNode@@$1?_GUID_f81ed800_7839_4447_945d_8e15da59ca55@@3U__s_GUID@@B$1?LIBID_MMC20@@3U_GUID@@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$CMMCIDispatchImpl@UNode@@$1?GUID_NULL@@3U_GUID@@B$1?LIBID_MMC20@@3U3@B@@", ".?AUNodes@@", ".?AV?$IDispatchImpl@UNodes@@$1?_GUID_313b01df_b22f_4d42_b1b8_483cdcf51d35@@3U__s_GUID@@B$1?LIBID_MMC20@@3U_GUID@@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$CMMCIDispatchImpl@UNodes@@$1?GUID_NULL@@3U_GUID@@B$1?LIBID_MMC20@@3U3@B@@", ".?AVCNodes@@", ".?AUColumns@@", ".?AV?$IDispatchImpl@UColumns@@$1?_GUID_383d4d97_fc44_478b_b139_6323dc48611c@@3U__s_GUID@@B$1?LIBID_MMC20@@3U_GUID@@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$CMMCIDispatchImpl@UColumns@@$1?GUID_NULL@@3U_GUID@@B$1?LIBID_MMC20@@3U3@B@@", ".?AUColumn@@", ".?AV?$IDispatchImpl@UColumn@@$1?_GUID_fd1c5f63_2b16_4d06_9ab3_f45350b940ab@@3U__s_GUID@@B$1?LIBID_MMC20@@3U_GUID@@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$CMMCIDispatchImpl@UColumn@@$1?GUID_NULL@@3U_GUID@@B$1?LIBID_MMC20@@3U3@B@@", ".?AVCColumnsBase@@", ".?AVCColumn@@", ".?AV?$CComObject@VCMMCResultNode@@@ATL@@", ".?AV?$CComObject@VCColumn@@@ATL@@", ".?AV?$CMMCNewEnumImpl@VCNodes@@HV1@@@", ".?AV?$CMMCNewEnumImpl@VCColumnsBase@@HVCCCListViewCtrl@@@@", ".?AV?$CComObject@V?$CMMCNewEnumImpl@VCNodes@@HV1@@@@ATL@@", ".?AV?$CComObject@V?$CMMCNewEnumImpl@VCColumnsBase@@HVCCCListViewCtrl@@@@@ATL@@", ".?AV?$CDockManager@VCDockSite@@@@", ".?AV?$CTiedComObject@VCMMCToolBarCtrlEx@@@@", ".?AUIAccPropServer@@", ".?AVCMMCToolBarAccServer@@", ".?AV?$CComObject@VCMMCToolBarAccServer@@@ATL@@", ".?AV?$CTiedComObject@VCMMCViewDropTarget@@@@", ".?AUIDropSource@@", ".?AVCMMCDropSource@@", ".?AV?$CComObject@VCMMCDropSource@@@ATL@@", ".?AUIDropTarget@@", ".?AVCMMCDropTarget@@", ".?AV?$CComObject@VCMMCDropTarget@@@ATL@@", ".?AVCDockSite@@", ".?AVCFavoriteXMLList@@", ".?AV?$CTiedComObject@VCFolderTabView@@@@", ".?AV?$ISupportErrorInfoImpl@$1?_GUID_618736e0_3c3d_11cf_810c_00aa00389b71@@3U__s_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?_GUID_618736e0_3c3d_11cf_810c_00aa00389b71@@3U__s_GUID@@B$1?GUID_NULL@@3U_GUID@@B@@", ".?AUIAccessible@@", ".?AV?$IDispatchImpl@UIAccessible@@$1?_GUID_618736e0_3c3d_11cf_810c_00aa00389b71@@3U__s_GUID@@B$1?LIBID_Accessibility@@3U_GUID@@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@", ".?AV?$CMMCIDispatchImpl@UIAccessible@@$1?GUID_NULL@@3U_GUID@@B$1?LIBID_Accessibility@@3U3@B@@", ".?AVCTabAccessible@@", ".?AV?$CComObject@VCTabAccessible@@@ATL@@", ".?AV?$CTiedComObject@VCMainFrame@@@@", ".?AVCMMCToolBar@@", ".?AVCMMCApplicationFrame@@", ".?AV?$CComObject@VCMMCApplicationFrame@@@ATL@@", ".?AVCMenuButtonsMgr@@", ".?AVCMenuButtonsMgrImpl@@", ".?AUIElementBehavior@@", ".?AVCMMCViewBehavior@@", ".?AV?$CComObject@VCMMCViewBehavior@@@ATL@@", ".?AVCOCXCtrlWrapper@@", ".?AV?$CComObject@VCOCXCtrlWrapper@@@ATL@@", ".?AVCPtrList@@", ".?AV?$CTypedPtrList@VCPtrList@@PAVCString@@@@", ".?AVCProgressCtrl@@", ".?AVCAMCProgressCtrl@@", ".?AVCToolbarNotify@@", ".?AVCVerbObserver@@", ".?AVCStandardToolbar@@", ".?AVXMLMapCollectionBase@@", ".?AVCSnapInReferencePtr@@", ".?AUIEnumString@@", ".?AVCStringEnumerator@@", ".?AV?$CComObject@VCStringEnumerator@@@ATL@@", ".?AV?$CIdentifierPool@K@@", ".?AV?$map@VCSnapInReferencePtr@@VCStringTable@@U?$less@VCSnapInReferencePtr@@@std@@V?$allocator@VCStringTable@@@4@@std@@", ".?AV?$XMLMapCollection@V?$map@VCSnapInReferencePtr@@VCStringTable@@U?$less@VCSnapInReferencePtr@@@std@@V?$allocator@VCStringTable@@@4@@std@@@@", ".?AVReferenceToStringTableMap@@", ".?AVCTreeFontLinker@@", ".?AUIConsoleTree@@", ".?AVCConsoleTree@@", ".?AVCTreeViewMap@@", ".?AUIDocHostUIHandlerDispatch@@", ".?AVCDocHostUIHandlerDispatch@@", ".?AV?$CComObject@VCDocHostUIHandlerDispatch@@@ATL@@", ".?AVCLKRhashAllocator@@", ".?AVCLKRhashDefaultAllocator@@", ".?AVCStr@@", ".?AVCSmartIcon@@", ".?AVCXMLIcon@@", ".?AVXMLPoint@@", ".?AVXMLRect@@", ".?AVCViewSettings@@", ".?AV?$TSnapinInterfaceWrapper@UISnapInFactory@@$00@@", ".?AVISnapInFactoryWrapper@@", ".?AVCImageList@WTL@@", ".?AVCXMLImageList@@", "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/44", ".?AVCSafeCriticalSection@UICoreLib@@", ".?AVCXML_IStream@@", ".?AUIClassInfo@DirectUI@@", ".?AVButton@DirectUI@@", ".?AV?$ClassInfo@VTaskButton@@VButton@DirectUI@@@DirectUI@@", ".?AV?$ClassInfo@VActClipper@@VElement@DirectUI@@@DirectUI@@", ".?AV?$ClassInfo@VActExpando@@VElement@DirectUI@@@DirectUI@@", ".?AV?$CAxWindowT@VCWindow@ATL@@@ATL@@", ".?AV?$CAxWindowT2@VCWindow@ATL@@@@", ".?AV?$CWindowImplRoot@V?$CAxWindowT2@VCWindow@ATL@@@@@ATL@@", ".?AV?$CWindowImplBaseT@V?$CAxWindowT2@VCWindow@ATL@@@@V?$CWinTraits@$0FGAAAAAA@$0A@@ATL@@@ATL@@", ".?AV?$CAxWindowImplT@VCMMCAxWindow@@V?$CAxWindowT2@VCWindow@ATL@@@@@@", ".?AVCMMCAxWindow@@", ".?AVCEventDispatcherBase@@", ".?AV?$CEventDispatcher@U_AppEvents@@@@", ".?AV?$CEventProxy@UAppEvents@@@@", ".?AV?$CScriptEvent@UAppEvents@@@@", ".?AUIEnumConnectionPoints@@", ".?AV?$CComEnumImpl@UIEnumConnectionPoints@@$1?IID_IEnumConnectionPoints@@3U_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@@ATL@@", ".?AV?$CComEnum@UIEnumConnectionPoints@@$1?IID_IEnumConnectionPoints@@3U_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComMultiThreadModel@6@@ATL@@", ".?AV?$CComObject@V?$CComEnum@UIEnumConnectionPoints@@$1?IID_IEnumConnectionPoints@@3U_GUID@@BPAUIConnectionPoint@@V?$_CopyInterface@UIConnectionPoint@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@", ".?AUIEnumConnections@@", ".?AV?$CComEnumImpl@UIEnumConnections@@$1?IID_IEnumConnections@@3U_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@@ATL@@", ".?AV?$CComEnum@UIEnumConnections@@$1?IID_IEnumConnections@@3U_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComMultiThreadModel@6@@ATL@@", ".?AV?$CComObject@V?$CComEnum@UIEnumConnections@@$1?IID_IEnumConnections@@3U_GUID@@BUtagCONNECTDATA@@V?$_Copy@UtagCONNECTDATA@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@", ".PAVCMemoryException@@", ".?AV_com_error@@", ".?AV?$ISupportErrorInfoImpl@$1?IID_IEnumVARIANT@@3U_GUID@@B@ATL@@", ".?AV?$IMMCSupportErrorInfoImpl@$1?IID_IEnumVARIANT@@3U_GUID@@B$1?GUID_NULL@@3U2@B@@", ".?AUIEnumVARIANT@@", ".?AV?$CMMCEnumerator@VCAMCDoc@@VCAMCViewPosition@@@@", ".?AV?$CComObject@V?$CMMCEnumerator@VCAMCDoc@@VCAMCViewPosition@@@@@ATL@@", ".?AV?$XMLListCollectionWrap@V?$list@VCDynamicPathEntry@@V?$allocator@VCDynamicPathEntry@@@std@@@std@@@@", ".?AVCFavTreeCtrl@@", ".?AVCDeferredResultPaneActivation@@", ".?AVCDeferredRenameListItem@@", ".?AV?$TSnapinInterfaceWrapper@UIExtendTaskPad@@$05@@", ".?AVIExtendTaskPadWrapper@@", ".?AVSC@mmcerror@@", ".?AV?$CTiedComObject@VCNodes@@@@", ".?AV?$CMMCEnumerator@VCNodes@@H@@", ".?AV?$CComObject@V?$CMMCEnumerator@VCNodes@@H@@@ATL@@", ".?AV?$CMMCEnumerator@VCCCListViewCtrl@@H@@", ".?AV?$CComObject@V?$CMMCEnumerator@VCCCListViewCtrl@@H@@@ATL@@", ".?AVCEdit@@", ".?AVCKeyboardNavDelayTimer@@", ".PAVCUserException@@", ".?AUIObjectSafety@@", ".?AV?$IObjectSafetyImpl@VCElementBehaviorFactory@@$00@ATL@@", ".?AUIElementBehaviorFactory@@", ".?AVCElementBehaviorFactory@@", ".?AV?$CComObject@VCElementBehaviorFactory@@@ATL@@", ".?AV?$CComPolyObject@VCAxHostWindow@ATL@@@ATL@@", ".?AV?$CComContainedObject@VCAxHostWindow@ATL@@@ATL@@", ".?AUIEnumUnknown@@", ".?AV?$CComEnumImpl@UIEnumUnknown@@$1?IID_IEnumUnknown@@3U_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@@ATL@@", ".?AV?$CComEnum@UIEnumUnknown@@$1?IID_IEnumUnknown@@3U_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@", ".?AV?$CComObject@V?$CComEnum@UIEnumUnknown@@$1?IID_IEnumUnknown@@3U_GUID@@BPAUIUnknown@@V?$_CopyInterface@UIUnknown@@@ATL@@VCComMultiThreadModel@6@@ATL@@@ATL@@", ".?AVCButton@@", ".?AVexception@@", ".?AVpool_exhausted@?$CIdentifierPool@K@@", ".?AVCKeyboardNavDelay@CAMCTreeView@@", ".?AVCTrackingSubclasserBase@@", ".?AVCFocusSubclasser@@", ".?AVCFrameSubclasser@@", ".?AVCViewSubclasser@@", ".PAVCException@@", ".?AVCXMLBinaryValue@@", ".?AVTaskButton@@", "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>", "<!-- Copyright ", " 1981-2001 Microsoft Corporation -->", "<assembly xmlns=\"urn:schemas-microsoft-com:asm.v1\" manifestVersion=\"1.0\">", "<assemblyIdentity", "processorArchitecture=\"x86\"", "version=\"5.1.0.0\"", "name=\"Microsoft.Windows.MMC\"", "type=\"win32\"", "<description>Microsoft Management Console</description>", "<dependency>", "<dependentAssembly>", "<assemblyIdentity", "type=\"win32\"", "name=\"Microsoft.Windows.Common-Controls\"", "version=\"6.0.0.0\"", "processorArchitecture=\"x86\"", "publicKeyToken=\"6595b64144ccf1df\"", "language=\"*\"", "</dependentAssembly>", "</dependency>", "</assembly>", "stdole2.tlbWWW", "9MMC20WWW", "]_DocumentModeWWWd", "8FdDocumentModed", "8DocumentMode_AuthorWd", "0=\\DocumentMode_UserWWWd", "DocumentMode_User_MDIWWWd", "DocumentMode_User_SDIWWW", "_ListViewModeWWW,", "ListViewMode,", "ListMode_Small_Icons,", "ListMode_Large_Icons,", "ListMode_ListWWW,", "0IuListMode_DetailW,", "ListMode_FilteredWWW", "_ViewOptions", "ViewOptionsW", "0';ViewOption_DefaultWW", "ViewOption_ScopeTreeHiddenWW", "EViewOption_NoToolBarsWWW", "ViewOption_NotPersistableWWW", "ViewOption_ActionPaneHiddenWX", "Z_ExportListOptionsWW", "ExportListOptionsWWW", "ExportListOptions_DefaultWWW", "ExportListOptions_UnicodeWWW", "ExportListOptions_TabDelimitedWW", "tExportListOptions_SelectedItemsOnlyW ", "V_Application ", "fHelp ", "Document", "f;SaveAsWW", "Filename", "CloseWWW", "tSaveChangesW", "TViewsWWWL", "8B<Node", "Property", "PropertyName", "@PropertyValueWWW", "Bookmark", "[IsScopeNodeW", "NodetypeL", "ActiveScopeNodeW", "_NodesWWW", "xA_NewEnum", ";retvalWW", "IndexWWW", "0vCountWWWL", "SelectionWWWL", "ListItemsWWWL", "SnapinScopeObjectWWW", "ScopeNodeWWW", ":fScopeNodeObjectWL", "UySnapinSelectionObjectWWW", "SelectionObjectWL", "TheSameWL", "SelectAllWWWL", "SelectWWL", "DeselectL", "IsSelectedWWL", "DisplayScopeNodePropertySheetWWWL", "DisplaySelectionPropertySheetWWWL", "CopyScopeNodeWWWL", "CopySelectionWWWL", "DeleteScopeNodeWL", "DeleteSelectionWL", "RenameScopeNodeW", "NewNameWL", "rRenameSelectedItemWWx", "ContextMenuW", "MenuItem", "DisplayNameW", "S|LanguageIndependentNameW", "LanguageIndependentPathW", "ExecuteW", "EnabledW", "`OIndexOrPathWL", "ScopeNodeContextMenuL", "SelectionContextMenuL", "RefreshScopeNodeL", "RefreshSelectionL", "ExecuteSelectionMenuItem", "7MenuItemPathL", "SExecuteScopeNodeMenuItemL", "ExecuteShellCommandW", "]CommandW", "mGDirectoryWWW", "ParametersWW", "WindowStateW@", "FrameWWW@", "FyMaximize@", "Minimize@", ">RestoreW@", "H{BottomWW@", "{Left@", "RightWWWL", "-ScopeTreeVisible ", "VisibleWL", "ForwardWL", ">JStatusBarTextWWWL", "MementoWL", "bViewMementoW", "(p9ColumnsW", "iColumnWW", "hNWidthWWW", "DisplayPositionW", "HiddenWWl", "ColumnSortOrderWl", "SortOrder_AscendingWl", "SortOrder_Descending", "tSetAsSortColumnW", "SortOrderWWW", "IsSortColumnL", "CellContentsL", "lExportListWW", "exportoptionsWWW", "vModeL", "ControlObjectWWW", "ControlW", "SnapInsW4", "SnapInWW4", "VendorWW4", "VersionW", "ExtensionsWW", "ExtensionWWW", "SnapinCLSIDW", "EnableAllExtensionsW", " EnableWW`", "PropertiesWW", "KValueWWW`", "RemoveWW", "SnapinNameOrCLSIDWWW", "ParentSnapin", "wActiveViewWW", "Location", "IsSavedW", "DRootNode(", "ScopeNamespaceWW(", "(wGetParentWWW", "ParentWW(", "GetChild", "ChildWWW(", "SGetNextW", "GetRootW", "TRoot(", "$dExpandWW", "CreatePropertiesT", "*ApplicationW ", "9zHide ", "UserControlW ", "VersionMajor ", "\u001fVersionMinor", "_AppEventsWW", "OnQuitWW", "OnDocumentOpenWW", "OnDocumentCloseW", "OnSnapInAddedWWW", "wqOnSnapInRemovedW", "OnNewViewWWW", "OnViewCloseW", "OnViewChange", "YNewOwnerNode", "7fOnSelectionChangeWWW", "NewNodes", "OnContextMenuExecutedWWW", "OnToolbarButtonClickedWW", "OnListUpdatedWWW", "8IhAppEventsWWW", "_EventConnectorW", "MConnectToWWW", "RDisconnectWW", "AppEventsDHTMLConnectorW ", "Microsoft Management Console 2.0WW", "Document Mode enumerationW", "Document opens in Author ModeW'", "Document opens in Full-Access User ModeWWW@", "Document opens in Limited-Access User Mode with multiple windowsWW=", "Document opens in Limited-Access User Mode with single windowW", "List View Mode enumeration", "List View with small icons", "List View with large icons%", "List View displaying simple list viewW\"", "List View displaying detailed view\"", "List View displaying filtered view", "View Options enumerationWW", "Default view optionsWW\"", "View with a Scope Tree pane hidden", "View with Tool Bars hidden-", "Temporary View without persistence capabilityW", "View with Action Pane hiddenWW", "List Export Option enumeration", "Default List Export optionsWWW", "Exports List to unicodeWWW$", "Exports List to tab-delimited formatWW", "Exports only selected filesWWW", "_Application Interface", "Displays Help for the consoleW", "Ends the MMC applicationWW", "Document Interface", "Saves the document.WWW+", "Saves the document using the specified nameWWW", "Closes the document.WW", "Views InterfaceWWW", "View Interface", "Node Interface$", "Returns the display name of the nodeWW>", "Returns the data corresponding to a specified clipboard format+", "Returns a persistable bookmark for the nodeWWWI", "Returns whether the node is a scope (tree) or result (list or leaf) item.W1", "Returns the nodetype GUID identifier for the nodeW9", "Gets the active scope node, ie the one that owns the viewW/", "Sets the active scope node, ie changes the viewWWW", "Nodes InterfaceWWW%", "Gets the set of selected result itemsW%", "Gets the set of all items in the listWT", "Returns the automation interface supplied by the snapin for the specified scope nodeWW7", "Returns the automation interface supplied by the snapinWWW\"", "Returns whether it's the same view'", "Returns the parent document of the viewWWW$", "Selects all items in the result paneWW!", "Selects a node in the result paneW", "Deselects a node in the viewWW/", "Returns whether a node is selected in this viewWWW,", "Displays the property for a given scope nodeWW/", "Displays the property for the current selectionWWW@", "Copies the data object of the active scope node to the clipboardWW8", "Copies the data object of the selection to the clipboardWW ", "Deletes the specified scope nodeWW", "Deletes the selected items*", "Renames a scope node to the specified name1", "Renames a node in this view to the specified nameW", "ContextMenu InterfaceW", "MenuItem Interfaced", "Returns the display name of the menu item, which includes accelerators. Eg '&Properties  ALT+ENTER' WW", "Returns the language-independent name of the menu item. If there is no language independent name, returns the display name without accelerators.WWg", "Returns the path of the menu item starting from the root. Does not include accelerators. Eg View->LargeWWW_", "Returns the language independent path of the menu item starting from the root. Eg _VIEW->_LARGEWWW", "Executes the context menu item4", "Returns whether the menu item is enabled or disabledWW0", "Accesses a context menu item by index or by nameWW0", "Returns the context menu for a node in this viewWW\"", "Refreshes the specified scope node", "Refreshes the selected itemsWW", "Executes a context menu item on the selection. The parameter is the language-independent or language-dependent path of the menu itemWW", "Executes a context menu item on the specified scope node. The parameter is the language-independent or language-dependent path  of the menu itemWWn", "Executes a shell command with the specified parameters in the specified directory with the correct window size", "Frame InterfaceWWW", "Maximizes the frameWWW", "Minimizes the frameWWW%", "Restores the frame to its normal sizeW.", "Returns the coordinate of the top of the frame+", "Sets the coordinate of the top of the frameWWW1", "Returns the coordinate of the bottom of the frameW.", "Sets the coordinate of the bottom of the frame/", "Returns the coordinate of the left of the frameWWW,", "Sets the coordinate of the left of the frameWW0", "Returns the coordinate of the right of the frameWW-", "Sets the coordinate of the right of the frameW", "Returns the frameW", "Closes the view window!", "Returns ScopeTreeVisible propertyW", "Sets ScopeTreeVisible property", "Navigates to the previous view", "Navigates to the next view", "Sets the status bar textWWf", "Returns a memento for the current view. A memento is the programmatic equivalent of a favorite settingc", "Sets the view to the specified memento, which contains information about the view to be re-created.WWW", "Columns InterfaceW", "Column InterfaceWW", "Returns the width of a columnW", "Sets the width of a column@", "returns the display position of the column in the set of columnsWW=", "Sets the display position of the column in the set of columnsW ", "Returns true if column is hiddenWW!", "Sets the Hidden status for columnW", "Sorts on this columnWW.", "Returns whether this column is the sort column&", "Returns the set of columns in the list$", "Returns the contents of a given cellWW6", "Exports the list (if one exists) to the specified file=", "Returns the list view mode, if a list view is being displayedW:", "Sets the list view mode, if a list view is being displayedH", "Returns the automation interface supplied by the OCX in the result pane.WW.", "Creates a new view rooted at a particular node2", "Returns the collection of all views (MDI children)", "SnapIns InterfaceW", "SnapIn InterfaceWW", "Returns the name of the snapin", "Returns the snapin vendor name", "Returns the snapin version", "Extensions InterfaceWW", "Extension InterfaceWWW%", "Returns the list of extension snapinsW'", "Returns the snapin CLSID in string formWWW8", "Enable or not enable all the extensions for this snapin.WW", "Enable/Disable this extensionW", "Properties InterfaceWW", "Property Interface(", "Returns the property identified by Name.WWE", "Removes a property identified by Name from the properties collection.W0", "Returns the properties collection for the snapinWW'", "Adds a snapin given its CLSID or ProgIDWWWE", "Removes a snapin from the list of snapins and hence from the console.W5", "Returns the set of all snap-ins that have been loadedW!", "Returns the currently active viewW(", "Returns the name of the current documentWW%", "Sets the name of the current documentW)", "Gets the location of the current documentWM", "Returns whether the file was saved. If not, it is dirty and needs to be savedW ", "Returns the mode of the documentWW", "Sets the mode of the documentW", "Returns the console root nodeW", "ScopeNamespace InterfaceWW\"", "Returns the parent of a scope node!", "Returns the child of a scope nodeW&", "Returns the next node in the namespace", "Gets the root of the namespace", "Causes a node to be expandedWW", "Returns the scope namespaceWWW*", "Returns a new, empty properties collection/", "Returns the parent application for the documentWWW", "Returns the document objectWWW+", "Loads the document from the specified file.WWW", "Returns the frame subobjectWWW", "Returns the visible propertyWW,", "Shows the application - sets Visible to trueWW-", "Hides the application - sets Visible to falseW ", "Returns the UserControl propertyWW", "Sets the UserControl propertyW-", "Gets the installed MMC's major version numberW-", "Gets the installed MMC's minor version numberW", "_AppEvents InterfaceWW!", "Occurs when application is closedW", "Occurs when document is opened'", "Occurs before the document is destroyedWWW", "Occurs when a snapin is addedW!", "Occurs when the snapin is removedW", "Occurs when a view is addedWWW!", "Occurs when the view is destroyedWN", "Occurs when the view is changed, for instance by a scope node selection change;", "Occurs when the result item selection for a view is changedWWW+", "Occurs when a context menu item is executedWWW'", "Occurs when a toolbar button is clickedWWW.", "Occurs when one or more list items are updated", "AppEvents InterfaceWWW", "_EventConnector InterfaceW9", "Connects to application events and starts forwarding themW", "Disconnects from applicationWWV", "Connector class to enable access from DHTML page to the events of current MMC instance", "stdole2.tlbWWW", "MMCInternalWebOcxWWW", "IWebSink", "BeforeNavigateWW", "oFlagsWWW", "TargetFrameNameW", "PostData", "HeadersW", "CancelWW", "InCommandStateChangeWW", "]CommandW", " EnableWW", "DownloadBeginWWW", "DownloadComplete", "FrameBeforeNavigateW", "FrameNavigateCompleteWWW", ".FrameNewWindowWW", "%ProcessedWWW", "M/NavigateComplete", "NewWindowWWW", "Referrer", "uProgress", "ProgressMaxW", "PropertyChangeWW", "szPropertyWW", "zpCancelW", "StatusTextChange", "bstrText", "/~TitleChangeW", "dtWindowActivateWW", "WindowMoveWW", "WindowResize4", "MMC Internal Web Browser event sink 1.0 Type LibraryWW", "IWebSink interface", "wwwwwwww(", "DDDDDDM", "wwwwpp", "DDDDDDM", "wwwwppp", "888888", "pppwpD", "DDDDDDM", "DDDDDDM", "DDDDDDM", "DDDDDDM", "DDDDDDM", "wwwwpp", "DDDDDDM", "wwwwppp", "888888", "pppwpD", "DDDDDDM", "DDDDDDM", "DDDDDDM", "DDDDDDM", "<HTML>", "<HEAD>", "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">", "<meta http-equiv=\"Expires\" content=\"0\">", "<TITLE></TITLE>", "<SCRIPT LANGUAGE=\"JavaScript\">", "function myLoad()", "   var str = \"reload.htm\" + location.hash;", "   location.replace (str);", "window.onload = myLoad;", "</SCRIPT>", "</HEAD>", "<BODY TOPMARGIN=0 LEFTMARGIN=0>", "</BODY>", "</HTML>", "<HTML>", "<HEAD>", "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">", "<meta http-equiv=\"Expires\" content=\"0\">", "<TITLE></TITLE>", "<SCRIPT LANGUAGE=\"JavaScript\">", "function myLoad()", "   var str = \"reload2.htm\" + location.hash;", "   location.replace (str);", "window.onload = myLoad;", "</SCRIPT>", "</HEAD>", "<BODY>", "</BODY>", "</HTML>", "<HTML>", "<HEAD>", "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">", "<meta http-equiv=\"Expires\" content=\"0\">", "<TITLE></TITLE>", "<SCRIPT LANGUAGE=\"JavaScript\">", "function myLoad()", "   var str = \"reload3.htm\" + location.hash;", "   location.replace (str);", "window.onload = myLoad;", "</SCRIPT>", "</HEAD>", "<BODY TOPMARGIN=0 LEFTMARGIN=0>", "</BODY>", "</HTML>", "<HTML>", "<head>", "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">", "<object id=\"MMCCtrl\"   width=0 height=0 classid=\"CLSID:545AE700-50BF-11D1-9FE9-00600832DB4A\"></object>", "<object id=\"SysColorX\" width=0 height=0 classid=\"CLSID:C47195EC-CD7A-11D1-8EA3-00C04F9900D7\"></object>", "<style>", "    body        {margin:0; font: clientTop:0; icon; color: windowtext; background:window; overflow:none}", "    .cInline    {", "                display:inline; width:30%;", "                margin-right:5px;", "                vertical-align:top;", "                }", "    BottomPanel {overflow:auto}", "    #FolderIcon {height:expression(TaskpadName.clientHeight + 10); width:100%;}", "    #TaskpadName {font: caption; color:captiontext;  margin-left:0; margin-right:0; margin-top: 0; width:100%; border:0; padding-left:3; padding-top:5; padding-bottom:7;}", "    #TaskpadDescription {font:icon; padding-left:5px; padding-top:5px; padding-bottom:3px; padding-right:5px}", "    p           {font-weight:normal; border:0; margin-top:0}", "    table       {font:icon; border:0 solid; padding:0; margin:0;}  <!--cellpadding and cellspacing only apply to table, but are NOT CSS attributes. Set them on a per-tag basis -->", "    tr          {margin:0; border:0; padding:0}", "    td          {margin:0; border:0 solid; padding:0}", "    div         {border:0; margin:0; padding:0; }", "    .Task       {color:expression(document.linkColor); text-decoration:underline; cursor:hand;}", "    .TaskHover  {color:expression(document.linkColor); text-decoration:underline; cursor:hand;} <!-- Cannot use the user's hover color because once a link has been visited, the hover color never appears. So it is better", "                                                             to be consistent than correct only part of the time -->", "    <!--@font-face {font-family:'GLYPH 100';src:url(\"res://C:\\WINNT\\system32\\mmc.exe/glyph100.eot\");}-->", "</style>", "<script language = \"JavaScript\">", "// constants", "// Taskpad button display types", "var CON_TASK_DISPLAY_TYPE_SYMBOL = 1;               // EOT-based symbol | font", "var CON_TASK_DISPLAY_TYPE_VANILLA_GIF = 2;          // (GIF) index 0 is transparent", "var CON_TASK_DISPLAY_TYPE_CHOCOLATE_GIF = 3;        // (GIF) index 1 is transparent", "var CON_TASK_DISPLAY_TYPE_BITMAP = 4;               // non-transparent raster image", "// global variables", "var s_rgTasks          = new Array();", "var s_rgURLtoEOTUnique = new Array();", "var s_rgFontFamilyNameUnique = new Array();", "var szScripts          = \"\";", "var szHash = location.hash;", "if (szHash != \"\")  // not sure why this is needed.", "szHash = szHash.substr(1);", "// need to collect the list of unique EOT URLs and create a <STYLE> @font-face{} </STYLE> rule here", "   // 1. Add all EOTs to a list", "   var objTask     = MMCCtrl.GetFirstTask(szHash);", "   while (objTask != null)", "      var displayObject = objTask.DisplayObject;", "      if(displayObject.DisplayObjectType == CON_TASK_DISPLAY_TYPE_SYMBOL)             // EOT-based symbol | font", "         AddEOT(displayObject. URLtoEOT, displayObject.FontFamilyName);", "      objTask = MMCCtrl.GetNextTask();", "   var szCssText = \"\";", "   // 2. Loop through each unique EOT & FontFamilyName", "   for (var i = 0; i < s_rgURLtoEOTUnique.length; i++)", "       szCssText += \"@font-face {font-family:'\" + s_rgFontFamilyNameUnique[i] + \"';font-style:normal; font-weight:normal; src:url('\" + s_rgURLtoEOTUnique[i] + \"');}\";", "   szCssText = \"<style\" +\">\" + szCssText + \"</style\" +\">\";", "   //alert(szCssText);", "   document.write(szCssText);", "// Prevent text from being selected and messing up the UI.", "function document.onselectstart()", "    event.returnValue = false;", "function AddEOT(szURLtoEOT, szFontFamilyName)", "   // 1. determine whether the URL is unique", "   // Get the length of the unique URL array", "   var iLength = s_rgURLtoEOTUnique.length;", "   var i       = 0;", "   // Compare with each existing entry in the array", "   if(iLength > 0)", "      for (i = 0; i < iLength; i++)", "      {", "          if (s_rgURLtoEOTUnique[i] == szURLtoEOT)", "          {", "              // Found a duplicate", "              bUnique = false;", "              return;", "          }", "      }", "   // 2. If we reached here, the URL is unique. Add it to the array.", "   s_rgURLtoEOTUnique[iLength]       = szURLtoEOT;", "   s_rgFontFamilyNameUnique[iLength] = szFontFamilyName;", "function GetTaskDisplayHTML(objTask, i)", "   var displayObject = objTask.DisplayObject;", "   // Build up the HTML for the button", "   var szBtnHTML = \"\";", "   var displayObjectType = displayObject.DisplayObjectType;", "   switch (displayObjectType)", "   case CON_TASK_DISPLAY_TYPE_SYMBOL:             // EOT-based symbol | font", "      szBtnHTML += \"      <span id = 'Image\"+i+\"' style='cursor:hand' width='100%' height='100%' onclick='javascript:Task\"+i+\"_Clicked();' style='font-family:\\\"\" + displayObject.FontFamilyName + \"\\\";font-size:23pt;'>\" + displayObject.SymbolString +\"</span>\";", "      break;", "   // there is NO difference between CON_TASK_DISPLAY_TYPE_VANILLA_GIF and CON_TASK_DISPLAY_TYPE_CHOCOLATE_GIF. The original intent was never implemented.", "   case CON_TASK_DISPLAY_TYPE_VANILLA_GIF:        // transparent", "   case CON_TASK_DISPLAY_TYPE_CHOCOLATE_GIF:      // transparent", "   case CON_TASK_DISPLAY_TYPE_BITMAP:             // non-transparent raster image", "       var szFilterCode    = \"\";", "       var szMouseOverCode = \"\";", "       if( (displayObjectType == CON_TASK_DISPLAY_TYPE_VANILLA_GIF) || (displayObjectType == CON_TASK_DISPLAY_TYPE_CHOCOLATE_GIF) )", "       {", "          szFilterCode = \"FILTER: mask(color=\" + SysColorX.HEXthreedshadow + \"); \";", "       }", "       if( (displayObject.MouseOverBitmap != \"\") && (displayObject.MouseOverBitmap != displayObject.MouseOffBitmap))", "       {", "          szMouseOverCode   = \"onmouseover='Image\"+i+\".src=s_rgTasks[\"+i+\"].DisplayObject.MouseOverBitmap;' \";", "          szMouseOverCode  += \"onmouseout ='Image\"+i+\".src=s_rgTasks[\"+i+\"].DisplayObject.MouseOffBitmap;' \";", "       }", "       szBtnHTML += \"<span style='cursor:hand' width='100%' height='100%' onclick='javascript:Task\"+i+\"_Clicked();'> <IMG id='Image\"+i+\"'\"+ szMouseOverCode +\"style='\" + szFilterCode +\"WIDTH: 32px; HEIGHT: 32px' src='\"+displayObject.MouseOffBitmap+\"'></span>\";", "       break;", "   return szBtnHTML;", "/*+-------------------------------------------------------------------------*", " * taskNotify", " * PURPOSE: Calls MMCCtrl's tasknotify. Uses expando properties instead of", " *          parameters as the event is hooked up using attachEvent.", " *          This is just a dummy function. We cannot do attachEvent with", " *          parameters. So we use this dummy function to call real function", " *          with those properties.", " * RETURNS:", " *    Nothing", " *+-------------------------------------------------------------------------*/", "function taskNotify()", "var srcElement = window.event.srcElement;", "MMCCtrl.TaskNotify(srcElement.param1, srcElement.param2, srcElement.param3);", "/*+-------------------------------------------------------------------------*", " * PopulateTaskpad", " * PURPOSE: Adds all tasks in the taskpad to the HTML. Also holds on to the", " *          task objects using the array s_rgTasks.", " * RETURNS:", " *    Nothing", " *+-------------------------------------------------------------------------*/", "function PopulateTaskpad()", "   var objTask     = MMCCtrl.GetFirstTask(szHash);", "   var strTasksHTML = \"\";", "   var strTaskHTML = \"\";", "   var bIsLargeIconMode = true;", "   var i = 0;", "   var count = 0;", "   var tempArray;", "   var IconSize = (bIsLargeIconMode) ? 32 : 16;", "   // Add the listpad title and button, if it exists", "   var objListviewInfo = MMCCtrl.GetListPadInfo(szHash);", "   if (objListviewInfo)", "      // Set the parameters for button-click handler (see taskNotify).", "      btnLV.param1 = objListviewInfo.Clsid;", "      btnLV.param2 = objListviewInfo.NotifyID;", "      btnLV.param3 = 0;", "  btnLV.attachEvent(\"onclick\", taskNotify);", "      ListViewTitle.innerText = objListviewInfo.Title + \"\";", "      if(objListviewInfo.HasButton)", "      {", "         btnLV.value = objListviewInfo.Text;", "      }", "      else", "      {", "         btnLV.style.display = \"none\";", "      }", "   // add the watermark, if it exists", "   var objWatermark = MMCCtrl.GetBackground( szHash );", "   if (objWatermark != null)", "      // Keep track of the watermark display object type", "      var watermarkObjectType = objWatermark.DisplayObjectType;", "      switch (watermarkObjectType)", "      {", "      case 1: // MMC_TASK_DISPLAY_TYPE_SYMBOL", "         var szWatermarkColor = (screen.colorDepth <= 8) ? \"color:threedlightshadow;\" : \"color:threedshadow;filter:alpha(opacity=15);\";", "         var szWatermark = \"<table style=' z-index:-1; position:absolute' width='100%' height='100%' cellspacing='0' cellpadding='10' border='0' frame='none' rules='none'><tr><td style='width:100%'><span></span></td><td valign='bottom' style='\"+szWatermarkColor+\" font-family:\\\"\" + objWatermark.FontFamilyName + \"\\\";font-weight:normal;font-size:300pt;'>\" + objWatermark.SymbolString +\"</td></tr></table>\";", "         TaskpadNameDIV.insertAdjacentHTML(\"afterEnd\", szWatermark);", "         break;", "      case 2: // MMC_TASK_DISPLAY_TYPE_VANILLA_GIF,      // (GIF) index 0 is transparent", "      case 3: // MMC_TASK_DISPLAY_TYPE_CHOCOLATE_GIF,    // (GIF) index 1 is transparent", "      case 4: // MMC_TASK_DISPLAY_TYPE_BITMAP            // non-transparent raster", "          // Note: No distinction made between GIF & Raster for the watermark", "          var gszWatermarkImage = objWatermark.MouseOverBitmap;", "          break;", "      }", "   // add the taskpad title", "   TaskpadName.innerHTML        = \"<NOBR>\"+MMCCtrl.GetTitle(szHash)+\"</NOBR>\";", "   TaskpadDescription.innerHTML = MMCCtrl.GetDescriptiveText(szHash) + \"<BR />\";", "   while (objTask != null)", "      s_rgTasks[i]= objTask; // this holds on to the task object.", "      strTaskHTML = \"\";", "      strTaskHTML += \"         <SPAN CLASS='cInline'>\";", "      strTaskHTML += \"\";", "      strTaskHTML += \"         <TABLE  BORDER='0' WIDTH='100%'>\";", "      strTaskHTML += \"             <TR>\";", "      strTaskHTML += \"                 <TD>\";", "      strTaskHTML += \"                     <BR />\";", "      strTaskHTML += \"                 </TD>\";", "      strTaskHTML += \"             </TR>\";", "      strTaskHTML += \"             <TR>\";", "      strTaskHTML += \"                 <TD VALIGN='TOP' width='32'height='32' style='border: 0 black solid; overflow:hidden'>\";", "      strTaskHTML += GetTaskDisplayHTML(objTask, i);", "      strTaskHTML += \"                 </TD>\";", "      strTaskHTML += \"                 <TD>\";", "      strTaskHTML += \"                     <SPAN CLASS='Task' id='TaskID' onmouseover=\\\"javascript:window.event.srcElement.className='TaskHover';\\\" onmouseout=\\\"javascript:window.event.srcElement.className='Task';\\\"\";", "      strTaskHTML += \"                         onclick='javascript:Task\"+i+\"_Clicked();'\";", "      strTaskHTML += \"                         tabIndex=\\\"0\\\">\";", "      strTaskHTML += \"                     </SPAN>\";", "      strTaskHTML += \"\";", "      strTaskHTML += \"                 </TD>\";", "      strTaskHTML += \"             </TR>\";", "      strTaskHTML += \"             </TABLE>\";", "      strTaskHTML += \"         </SPAN>\";", "      szScripts += \"           function Task\"+i+\"_Clicked()\";", "      szScripts += \"           {\";", "      szScripts += \"              try\";", "      szScripts += \"              {\";", "      szScripts += \"                 window.event.srcElement.className='Task';\";", "      switch (objTask.ActionType)", "      // 3 possibilities for action:  \"ID:\", \"LINK:\" and \"SCRIPT:\"", "      {", "          case 0:", "              // MMC_TASK_ACTION_ID", "               szScripts += \"MMCCtrl.TaskNotify(s_rgTasks[\"+i+\"].Clsid,s_rgTasks[\"+i+\"].CommandID,0);\";", "              break;", "          case 1:", "              // MMC_TASK_ACTION_LINK", "               szScripts += \"window.navigate(s_rgTasks[\"+i+\"].ActionURL);\";", "              break;", "          case 2:", "              // MMC_TASK_ACTION_SCRIPT", "             // Convert script language string to upper case", "             var szLanguage = objTask.ScriptLanguage.toUpperCase();", "             switch (szLanguage)", "             {", "                 case \"JSCRIPT\":", "                 case \"JAVASCRIPT\":", "                     // Pass a script string to the JSObject to be evaluated and executed", "                     // through the eval method (this can be a semi-colon delimited complex expression)", "                     szScripts += \"eval (s_rgTasks[\"+i+\"].Script);\";", "                     break;", "                 case \"VBSCRIPT\":", "                 case \"VBS\":", "                     // Use the window.execScript method to execute a simple or complex VBScript expression", "                     szScripts += \"window.execScript (s_rgTasks[\"+i+\"].Script, '\"+szLanguage+\"');\";", "                     break;", "                 default:", "                     var L_UnknownScriptingLanguage_ErrorMessage = \"Unrecognized scripting language.\";", "                     alert (L_UnknownScriptingLanguage_ErrorMessage);", "                     break;", "             }", "             break;", "              break;", "      }", "      szScripts += \"               \";", "      szScripts += \"              } catch(e)\";", "      szScripts += \"              {\";", "      szScripts += \"                 window.alert(e.description);\";", "      szScripts += \"              }\";", "      szScripts += \"           }\";", "      strTasksHTML +=  strTaskHTML;", "      objTask = MMCCtrl.GetNextTask();", "      ++i;", "   count = i; // the total number of tasks", "   Tasks.innerHTML = strTasksHTML; // add the tasks to the HTML", "   tempArray= document.all.item(\"TaskID\"); //get the collection of all tasks on the page.", "   if(count==1)", "      // in this case tempArray is not an array at all, but a single object per the DHTML object model", "      tempArray.title     =s_rgTasks[0].Help; // set the tooltip", "      tempArray.innerText =s_rgTasks[0].Text; // set the title", "      eval(\"Image0.title=s_rgTasks[0].Help;\"); // set the tooltip for the image      ", "   else", "   if(tempArray.length != count) // sanity check", "  alert(\"Error!\");", "   // set up the tasks - we do this here rather than expanding the variables in the strings above to", "   // prevent Escaping problems. Eg \\ would need to be converted to \\\\ otherwise.", "   for(i=0; i<count; i++)", "  tempArray(i).title     =s_rgTasks[i].Help; // set the tooltip", "  tempArray(i).innerText =s_rgTasks[i].Text; // set the title", "  eval(\"Image\"+i+\".title=s_rgTasks[\"+i+\"].Help;\"); // set the tooltip for the image", "   szScripts = '<span style=\"display:none\">h</span><SCRIPT DEFER>' + szScripts +'</SCRIPT' + '>'; // see Q185140. The SPAN is needed because it causes the page to be reparsed.", "   TaskpadNameDIV.insertAdjacentHTML(\"afterBegin\", szScripts);", "function OnLoad()", "   document.vlinkColor = document.linkColor; // make sure that visited links don't look different", "   PopulateTaskpad();", "</script>", "</head>", "<body id=\"body\" scroll='no' onload='OnLoad()' tabIndex='-1'>", "    <DIV id=\"TaskpadNameDIV\" style=\"position:absolute; top:0; left:0\">", "<TABLE WIDTH=\"100%\" cellspacing=\"0\" cellpadding=\"0\" COLS=\"2\">", "<TD><SPAN style=\"width:32px\"></SPAN></TD>", "<TD id=\"TaskpadName\"><NOBR></NOBR></TD>", "</TABLE>", "    </DIV>", "    <TABLE WIDTH=\"100%\" HEIGHT=\"100%\" cellspacing=\"0\" cellpadding=\"0\">", "        <TR id=\"TitleRow\" WIDTH=\"100%\" VALIGN=\"TOP\">", "            <TD id=\"LeftPanel\" WIDTH=\"100%\">", "                <object id='FolderIcon' classid=\"clsid:B0395DA5-6A15-4E44-9F36-9A9DC7A2F341\" tabIndex='-1'>  <!-- do not display the notch for horizontal taskpads-->", "                    <PARAM NAME=\"Notch\" VALUE=\"0\"></PARAM>", "                </object>", "            </TD>", "        </TR>", "        <tr ID=\"DescriptionRow\">", "            <td id='TaskpadDescription' ><BR /></td>", "        </tr>", "        <tr>", "            <TD style=\"background-color:buttonface\">", "                <TABLE style=\"width:100%\">", "                    <TR>", "                        <TD width=\"100%\"><DIV id=\"ListViewTitle\"></DIV>", "                        </TD>", "                        <TD>", "                            <INPUT type=\"button\" id=\"btnLV\" style=\"font:menu\"/>", "                        </TD>", "                    </TR>", "                </TABLE>", "            </TD>", "        </tr>", "        <tr id=\"TopPanelRow\" style=\"height:100%;\">", "            <td id='TopPanel' style=\"padding:0; border:solid windowtext 1;\" >"]